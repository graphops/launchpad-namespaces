{
    "openapi": "3.0.0",
    "info": {
        "description": "TODO",
        "title": "Generated by cue.",
        "version": "no version"
    },
    "paths": {},
    "components": {
        "schemas": {
            "base": {
                "description": "Launchpad Namespaces schemas, by GraphOps",
                "type": "object"
            },
            "base.helmfiles": {
                "type": "object",
                "properties": {
                    "apiVersions": {
                        "description": "Configure a fixed list of API versions to pass to 'helm\ntemplate' via the --api-versions flag with the below:",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "bases": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "environments": {
                        "description": "The list of environments managed by helmfile.",
                        "type": "object",
                        "default": {
                            "default": {}
                        },
                        "oneOf": [
                            {},
                            {
                                "required": [
                                    "default"
                                ],
                                "properties": {
                                    "default": {
                                        "type": "object"
                                    }
                                }
                            }
                        ]
                    },
                    "commonLabels": {
                        "$ref": "#/components/schemas/base.helmfiles.map"
                    },
                    "helmBinary": {
                        "description": "Path to alternative helm binary (--helm-binary)",
                        "type": "string"
                    },
                    "helmDefaults": {
                        "$ref": "#/components/schemas/base.helmfiles.helmDefaults"
                    },
                    "helmfiles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/base.helmfiles.helmfile"
                        }
                    },
                    "hooks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/base.helmfiles.hook"
                        }
                    },
                    "missingFileHandler": {
                        "$ref": "#/components/schemas/base.helmfiles.missingFileHandler"
                    },
                    "releases": {
                        "description": "Helmfile runs various helm commands to converge the current\nstate in the live cluster to the desired state defined here.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/base.helmfiles.release"
                        }
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/base.helmfiles.repository"
                        }
                    }
                }
            },
            "base.helmfiles.environment": {
                "type": "object",
                "properties": {
                    "values": {
                        "type": "array",
                        "items": {
                            "oneOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "$ref": "#/components/schemas/base.helmfiles.map"
                                }
                            ]
                        }
                    },
                    "secrets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "missingFileHandler": {
                        "$ref": "#/components/schemas/base.helmfiles.missingFileHandler"
                    },
                    "kubeContext": {
                        "type": "string"
                    }
                }
            },
            "base.helmfiles.helmDefaults": {
                "type": "object",
                "properties": {
                    "tillerNamespace": {
                        "type": "string"
                    },
                    "tillerless": {
                        "type": "boolean"
                    },
                    "kubeContext": {
                        "type": "string"
                    },
                    "cleanupOnFail": {
                        "type": "boolean"
                    },
                    "args": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "verify": {
                        "type": "boolean"
                    },
                    "wait": {
                        "type": "boolean"
                    },
                    "waitForJobs": {
                        "type": "boolean"
                    },
                    "timeout": {
                        "type": "number"
                    },
                    "recreatePods": {
                        "type": "boolean"
                    },
                    "force": {
                        "type": "boolean"
                    },
                    "tls": {
                        "type": "boolean"
                    },
                    "tlsCACert": {
                        "type": "string"
                    },
                    "tlsCert": {
                        "type": "string"
                    },
                    "tlsKey": {
                        "type": "string"
                    },
                    "historyMax": {
                        "description": "limit the maximum number of revisions saved per release. Use 0\nfor no limit.",
                        "type": "number",
                        "default": 10
                    },
                    "createNamespace": {
                        "type": "boolean"
                    }
                }
            },
            "base.helmfiles.helmfile": {
                "allOf": [
                    {
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "required": [
                                    "path"
                                ],
                                "properties": {
                                    "path": {
                                        "type": "string"
                                    },
                                    "selectors": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "values": {
                                        "type": "array",
                                        "items": {
                                            "allOf": [
                                                {
                                                    "oneOf": [
                                                        {
                                                            "type": "string"
                                                        },
                                                        {
                                                            "type": "object",
                                                            "properties": {
                                                                "key1": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "oneOf": [
                                                        {
                                                            "type": "string"
                                                        },
                                                        {
                                                            "type": "object"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object"
                            }
                        ]
                    }
                ]
            },
            "base.helmfiles.hook": {
                "type": "object",
                "properties": {
                    "events": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "showlogs": {
                        "type": "boolean"
                    },
                    "command": {
                        "type": "string"
                    },
                    "args": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "base.helmfiles.map": {
                "type": "object"
            },
            "base.helmfiles.missingFileHandler": {
                "type": "string",
                "enum": [
                    "Error",
                    "Warn",
                    "Info",
                    "Debug"
                ]
            },
            "base.helmfiles.release": {
                "type": "object",
                "required": [
                    "chart",
                    "name"
                ],
                "properties": {
                    "atomic": {
                        "type": "boolean"
                    },
                    "chart": {
                        "type": "string"
                    },
                    "cleanupOnFail": {
                        "type": "boolean",
                        "default": false
                    },
                    "condition": {
                        "type": "string"
                    },
                    "createNamespace": {
                        "type": "boolean"
                    },
                    "devel": {
                        "description": "if used with charts museum allows to pull unstable charts for\ndeployment, for example: if 1.2.3 and 1.2.4-dev versions exist\nand set to true, 1.2.4-dev will be pulled (default false)",
                        "type": "boolean",
                        "default": false
                    },
                    "disableValidation": {
                        "type": "boolean"
                    },
                    "disableValidationOnInstall": {
                        "type": "boolean"
                    },
                    "disableOpenAPIValidation": {
                        "type": "boolean"
                    },
                    "force": {
                        "type": "boolean"
                    },
                    "historyMax": {
                        "type": "number"
                    },
                    "hooks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/base.helmfiles.hook"
                        }
                    },
                    "installed": {
                        "oneOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "object"
                            }
                        ]
                    },
                    "kubeContext": {
                        "type": "string"
                    },
                    "labels": {
                        "$ref": "#/components/schemas/base.helmfiles.map"
                    },
                    "missingFileHandler": {
                        "$ref": "#/components/schemas/base.helmfiles.missingFileHandler"
                    },
                    "name": {
                        "type": "string"
                    },
                    "namespace": {
                        "type": "string"
                    },
                    "recreatePods": {
                        "type": "boolean"
                    },
                    "secrets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "set": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "oneOf": [
                                {
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "file": {
                                            "type": "string"
                                        }
                                    }
                                },
                                {
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "values": {
                                            "type": "array",
                                            "items": {
                                                "type": "number"
                                            }
                                        }
                                    }
                                },
                                {
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "skipDeps": {
                        "description": "When set to `true`, skips running `helm dep up` and `helm dep\nbuild` on this release's chart.",
                        "type": "boolean",
                        "default": false
                    },
                    "tillerNamespace": {
                        "type": "string"
                    },
                    "tillerless": {
                        "type": "boolean"
                    },
                    "timeout": {
                        "type": "number"
                    },
                    "tls": {
                        "type": "boolean"
                    },
                    "tlsCACert": {
                        "type": "string"
                    },
                    "tlsCert": {
                        "type": "string"
                    },
                    "tlsKey": {
                        "type": "string"
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "oneOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "$ref": "#/components/schemas/base.helmfiles.map"
                                }
                            ]
                        }
                    },
                    "verify": {
                        "type": "boolean"
                    },
                    "version": {
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "allOf": [
                                    {
                                        "type": "number"
                                    },
                                    {
                                        "not": {
                                            "anyOf": [
                                                {
                                                    "type": "integer"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            {
                                "type": "integer"
                            }
                        ]
                    },
                    "wait": {
                        "type": "boolean"
                    },
                    "waitForJobs": {
                        "type": "boolean"
                    }
                }
            },
            "base.helmfiles.repository": {
                "type": "object",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "certFile": {
                        "type": "string"
                    },
                    "keyFile": {
                        "type": "string"
                    },
                    "caFile": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "oci": {
                        "type": "boolean"
                    },
                    "passCredentials": {
                        "type": "boolean"
                    }
                }
            },
            "base.labels": {
                "type": "object"
            },
            "base.values": {
                "description": "Base namespace values interface schema",
                "type": "object",
                "required": [
                    "targetNamespace"
                ],
                "properties": {
                    "helmDefaults": {
                        "$ref": "#/components/schemas/helmDefaults"
                    },
                    "targetNamespace": {
                        "description": "Sets the cluster namespace in which the releases will be deployed",
                        "type": "string"
                    },
                    "annotations": {
                        "description": "Add annotations",
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/map"
                            }
                        ]
                    },
                    "labels": {
                        "description": "Adds labels",
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/map"
                            }
                        ]
                    }
                }
            },
            "helmDefaults": {
                "type": "object",
                "properties": {
                    "tillerNamespace": {
                        "type": "string"
                    },
                    "tillerless": {
                        "type": "boolean"
                    },
                    "kubeContext": {
                        "type": "string"
                    },
                    "cleanupOnFail": {
                        "type": "boolean"
                    },
                    "args": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "verify": {
                        "type": "boolean"
                    },
                    "wait": {
                        "type": "boolean"
                    },
                    "waitForJobs": {
                        "type": "boolean"
                    },
                    "timeout": {
                        "type": "number"
                    },
                    "recreatePods": {
                        "type": "boolean"
                    },
                    "force": {
                        "type": "boolean"
                    },
                    "tls": {
                        "type": "boolean"
                    },
                    "tlsCACert": {
                        "type": "string"
                    },
                    "tlsCert": {
                        "type": "string"
                    },
                    "tlsKey": {
                        "type": "string"
                    },
                    "historyMax": {
                        "description": "limit the maximum number of revisions saved per release. Use 0\nfor no limit.",
                        "type": "number",
                        "default": 10
                    },
                    "createNamespace": {
                        "type": "boolean"
                    }
                }
            },
            "helmfile": {
                "allOf": [
                    {
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "required": [
                                    "path"
                                ],
                                "properties": {
                                    "path": {
                                        "type": "string"
                                    },
                                    "selectors": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "values": {
                                        "type": "array",
                                        "items": {
                                            "allOf": [
                                                {
                                                    "oneOf": [
                                                        {
                                                            "type": "string"
                                                        },
                                                        {
                                                            "type": "object",
                                                            "properties": {
                                                                "key1": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "oneOf": [
                                                        {
                                                            "type": "string"
                                                        },
                                                        {
                                                            "type": "object"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object"
                            }
                        ]
                    }
                ]
            },
            "map": {
                "type": "object"
            },
            "namespaces": {
                "type": "object"
            },
            "namespaces.ethereum": {
                "description": "eth-erigon namespace",
                "type": "object",
                "required": [
                    "labels"
                ],
                "properties": {
                    "labels": {
                        "type": "object",
                        "properties": {
                            "launchpad.graphops.xyz/namespace": {
                                "type": "string",
                                "enum": [
                                    "ethereum"
                                ]
                            }
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/base.labels"
                            },
                            {
                                "required": [
                                    "launchpad.graphops.xyz/namespace"
                                ]
                            }
                        ]
                    }
                }
            },
            "namespaces.ethereum.flavor": {
                "type": "object",
                "required": [
                    "mainnet",
                    "goerli"
                ],
                "properties": {
                    "mainnet": {
                        "description": "suitable defaults for a mainnet archive node",
                        "type": "string",
                        "enum": [
                            "mainnet"
                        ]
                    },
                    "goerli": {
                        "description": "suitable defaults for a göerli archive node",
                        "type": "string",
                        "enum": [
                            "goerli"
                        ]
                    }
                }
            },
            "namespaces.ethereum.flavor.enum": {
                "type": "string",
                "enum": [
                    "mainnet",
                    "goerli"
                ]
            },
            "namespaces.ethereum.helmfiles": {
                "description": "eth-erigon helmfile API",
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string",
                        "pattern": "*github.com/graphops/launchpad-namespaces.git@eth-erigon/helmfile.yaml*"
                    },
                    "values": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/namespaces.ethereum.values"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/namespaces.ethereum.values"
                                }
                            }
                        ]
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/base.helmfiles"
                    },
                    {
                        "required": [
                            "path"
                        ]
                    }
                ]
            },
            "namespaces.ethereum.meta": {
                "type": "object",
                "required": [
                    "name",
                    "url",
                    "description"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "enum": [
                            "ethereum"
                        ]
                    },
                    "url": {
                        "type": "string",
                        "enum": [
                            "https://github.com/graphops/launchpad-namespaces/eth-erigon"
                        ]
                    },
                    "description": {
                        "type": "string",
                        "enum": [
                            "For deploying ethereum mainnet and göerli archive nodes"
                        ]
                    }
                }
            },
            "namespaces.ethereum.releases": {
                "type": "object",
                "required": [
                    "erigon",
                    "nimbus",
                    "proxyd"
                ],
                "properties": {
                    "erigon": {
                        "type": "object",
                        "required": [
                            "name",
                            "chart"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "enum": [
                                    "erigon"
                                ]
                            },
                            "chart": {
                                "$ref": "#/components/schemas/repositories.graphops.charts.erigon"
                            }
                        }
                    },
                    "nimbus": {
                        "type": "object",
                        "required": [
                            "name",
                            "chart"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "enum": [
                                    "nimbus"
                                ]
                            },
                            "chart": {
                                "$ref": "#/components/schemas/repositories.graphops.charts.nimbus"
                            }
                        }
                    },
                    "proxyd": {
                        "type": "object",
                        "required": [
                            "name",
                            "chart"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "enum": [
                                    "proxyd"
                                ]
                            },
                            "chart": {
                                "$ref": "#/components/schemas/repositories.graphops.charts.proxyd"
                            }
                        }
                    }
                }
            },
            "namespaces.ethereum.values": {
                "description": "eth-erigon namespace values schema",
                "type": "object",
                "properties": {
                    "targetNamespace": {
                        "description": "the default is eth-[flavor]",
                        "type": "string",
                        "default": "eth-mainnet"
                    },
                    "erigon": {
                        "type": "object",
                        "properties": {
                            "mergeValues": {
                                "type": "boolean"
                            },
                            "values": {
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/map"
                                    },
                                    {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/map"
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "nimbus": {
                        "type": "object",
                        "properties": {
                            "mergeValues": {
                                "type": "boolean"
                            },
                            "values": {
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/map"
                                    },
                                    {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/map"
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "flavor": {
                        "$ref": "#/components/schemas/namespaces.ethereum.flavor.enum"
                    },
                    "proxyd": {
                        "type": "object",
                        "properties": {
                            "mergeValues": {
                                "type": "boolean"
                            },
                            "values": {
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/map"
                                    },
                                    {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/map"
                                        }
                                    }
                                ]
                            }
                        }
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/base.values"
                    },
                    {
                        "required": [
                            "targetNamespace"
                        ]
                    }
                ]
            },
            "namespaces.ingress": {
                "type": "object",
                "required": [
                    "labels"
                ],
                "properties": {
                    "labels": {
                        "type": "object",
                        "properties": {
                            "launchpad.graphops.xyz/namespace": {
                                "type": "string",
                                "enum": [
                                    "ingress"
                                ]
                            }
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/base.labels"
                            },
                            {
                                "required": [
                                    "launchpad.graphops.xyz/namespace"
                                ]
                            }
                        ]
                    }
                }
            },
            "namespaces.ingress.features": {
                "type": "object",
                "required": [
                    "certManager",
                    "ingress"
                ],
                "properties": {
                    "certManager": {
                        "description": "cert-manager: include cert-manager",
                        "type": "string",
                        "enum": [
                            "cert-manager"
                        ]
                    },
                    "ingress": {
                        "description": "ingress: for the ingress-nginx release",
                        "type": "string",
                        "enum": [
                            "ingress"
                        ]
                    }
                }
            },
            "namespaces.ingress.features.enum": {
                "description": "ingress features enum",
                "type": "string",
                "enum": [
                    "ingress",
                    "cert-manager"
                ]
            },
            "namespaces.ingress.helmfiles": {
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string",
                        "pattern": "*github.com/graphops/launchpad-namespaces.git@ingress/helmfile.yaml*"
                    },
                    "values": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/namespaces.ingress.values"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/namespaces.ingress.values"
                                }
                            }
                        ]
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/base.helmfiles"
                    },
                    {
                        "required": [
                            "path"
                        ]
                    }
                ]
            },
            "namespaces.ingress.meta": {
                "type": "object",
                "required": [
                    "name",
                    "url",
                    "description"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "enum": [
                            "ingress"
                        ]
                    },
                    "url": {
                        "type": "string",
                        "enum": [
                            "https://github.com/graphops/launchpad-namespaces/ingress"
                        ]
                    },
                    "description": {
                        "type": "string",
                        "enum": [
                            "Adds ingress support and certificate management on kubernetes"
                        ]
                    }
                }
            },
            "namespaces.ingress.releases": {
                "type": "object",
                "required": [
                    "ingressNginx",
                    "certManager",
                    "certManagerResources"
                ],
                "properties": {
                    "ingressNginx": {
                        "type": "object",
                        "required": [
                            "name",
                            "chart"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "enum": [
                                    "ingress-nginx"
                                ]
                            },
                            "chart": {
                                "$ref": "#/components/schemas/repositories.ingress-nginx.charts.ingress-nginx"
                            }
                        }
                    },
                    "certManager": {
                        "type": "object",
                        "required": [
                            "name",
                            "chart"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "enum": [
                                    "cert-manager"
                                ]
                            },
                            "chart": {
                                "$ref": "#/components/schemas/repositories.jetstack.charts.cert-manager"
                            }
                        }
                    },
                    "certManagerResources": {
                        "type": "object",
                        "required": [
                            "name",
                            "chart"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "enum": [
                                    "cert-manager-resources"
                                ]
                            },
                            "chart": {
                                "$ref": "#/components/schemas/repositories.graphops.charts.resource-injector"
                            }
                        }
                    }
                }
            },
            "namespaces.ingress.values": {
                "type": "object",
                "properties": {
                    "targetNamespace": {
                        "type": "string",
                        "default": "ingress"
                    },
                    "ingress-nginx": {
                        "type": "object",
                        "properties": {
                            "mergeValues": {
                                "type": "boolean"
                            },
                            "values": {
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/map"
                                    },
                                    {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/map"
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "cert-manager": {
                        "type": "object",
                        "properties": {
                            "mergeValues": {
                                "type": "boolean"
                            },
                            "values": {
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/map"
                                    },
                                    {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/map"
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "features": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/namespaces.ingress.features.enum"
                        },
                        "default": [
                            "ingress",
                            "cert-manager"
                        ]
                    },
                    "cert-manager-resources": {
                        "type": "object",
                        "properties": {
                            "mergeValues": {
                                "type": "boolean"
                            },
                            "values": {
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/map"
                                    },
                                    {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/map"
                                        }
                                    }
                                ]
                            }
                        }
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/base.values"
                    },
                    {
                        "required": [
                            "targetNamespace"
                        ]
                    }
                ]
            },
            "namespaces.monitoring": {
                "type": "object",
                "required": [
                    "labels"
                ],
                "properties": {
                    "labels": {
                        "type": "object",
                        "properties": {
                            "launchpad.graphops.xyz/namespace": {
                                "type": "string",
                                "enum": [
                                    "monitoring"
                                ]
                            }
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/base.labels"
                            },
                            {
                                "required": [
                                    "launchpad.graphops.xyz/namespace"
                                ]
                            }
                        ]
                    }
                }
            },
            "namespaces.monitoring.features": {
                "description": "Monitoring namespace features schema",
                "type": "object",
                "required": [
                    "metrics",
                    "logs"
                ],
                "properties": {
                    "metrics": {
                        "description": "metrics: add kube-prometheus stack and node-problem-detector",
                        "type": "string",
                        "enum": [
                            "metrics"
                        ]
                    },
                    "logs": {
                        "description": "logs: add Loki and promtail for logging",
                        "type": "string",
                        "enum": [
                            "logs"
                        ]
                    }
                }
            },
            "namespaces.monitoring.features.enum": {
                "type": "string",
                "enum": [
                    "metrics",
                    "logs"
                ]
            },
            "namespaces.monitoring.helmfiles": {
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string",
                        "pattern": "*github.com/graphops/launchpad-namespaces.git@monitoring/helmfile.yaml*"
                    },
                    "values": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/namespaces.monitoring.values"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/namespaces.monitoring.values"
                                }
                            }
                        ]
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/base.helmfiles"
                    },
                    {
                        "required": [
                            "path"
                        ]
                    }
                ]
            },
            "namespaces.monitoring.meta": {
                "type": "object",
                "required": [
                    "name",
                    "url",
                    "description"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "enum": [
                            "monitoring"
                        ]
                    },
                    "url": {
                        "type": "string",
                        "enum": [
                            "https://github.com/graphops/launchpad-namespaces/monitoring"
                        ]
                    },
                    "description": {
                        "type": "string",
                        "enum": [
                            "Adds software for log and metrics collection and visualization, as well as alarmistic."
                        ]
                    }
                }
            },
            "namespaces.monitoring.releases": {
                "type": "object",
                "required": [
                    "kubePrometheusStack",
                    "nodeProblemDetector",
                    "loki",
                    "promtail"
                ],
                "properties": {
                    "kubePrometheusStack": {
                        "type": "object",
                        "required": [
                            "name",
                            "chart"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "enum": [
                                    "kube-prometheus-stack"
                                ]
                            },
                            "chart": {
                                "$ref": "#/components/schemas/repositories.prometheus-community.charts.kube-prometheus-stack"
                            }
                        }
                    },
                    "nodeProblemDetector": {
                        "type": "object",
                        "required": [
                            "name",
                            "chart"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "enum": [
                                    "node-problem-detector"
                                ]
                            },
                            "chart": {
                                "$ref": "#/components/schemas/repositories.deliveryhero.charts.node-problem-detector"
                            }
                        }
                    },
                    "loki": {
                        "type": "object",
                        "required": [
                            "name",
                            "chart"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "enum": [
                                    "loki"
                                ]
                            },
                            "chart": {
                                "$ref": "#/components/schemas/repositories.grafana.charts.loki-distributed"
                            }
                        }
                    },
                    "promtail": {
                        "type": "object",
                        "required": [
                            "name",
                            "chart"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "enum": [
                                    "promtail"
                                ]
                            },
                            "chart": {
                                "$ref": "#/components/schemas/repositories.grafana.charts.promtail"
                            }
                        }
                    }
                }
            },
            "namespaces.monitoring.values": {
                "description": "Monitoring namespace values interface schema",
                "type": "object",
                "properties": {
                    "targetNamespace": {
                        "type": "string",
                        "default": "monitoring"
                    },
                    "kube-prometheus-stack": {
                        "type": "object",
                        "properties": {
                            "mergeValues": {
                                "type": "boolean"
                            },
                            "values": {
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/map"
                                    },
                                    {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/map"
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "node-problem-detector": {
                        "type": "object",
                        "properties": {
                            "mergeValues": {
                                "type": "boolean"
                            },
                            "values": {
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/map"
                                    },
                                    {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/map"
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "loki": {
                        "type": "object",
                        "properties": {
                            "mergeValues": {
                                "type": "boolean"
                            },
                            "values": {
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/map"
                                    },
                                    {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/map"
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "features": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/namespaces.monitoring.features.enum"
                        },
                        "default": [
                            "metrics",
                            "logs"
                        ]
                    },
                    "promtail": {
                        "type": "object",
                        "properties": {
                            "mergeValues": {
                                "type": "boolean"
                            },
                            "values": {
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/map"
                                    },
                                    {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/map"
                                        }
                                    }
                                ]
                            }
                        }
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/base.values"
                    },
                    {
                        "required": [
                            "targetNamespace"
                        ]
                    }
                ]
            },
            "namespaces.postgresOperator": {
                "type": "object",
                "required": [
                    "labels"
                ],
                "properties": {
                    "labels": {
                        "type": "object",
                        "properties": {
                            "launchpad.graphops.xyz/namespace": {
                                "type": "string",
                                "enum": [
                                    "postgres-operator"
                                ]
                            }
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/base.labels"
                            },
                            {
                                "required": [
                                    "launchpad.graphops.xyz/namespace"
                                ]
                            }
                        ]
                    }
                }
            },
            "namespaces.postgresOperator.helmfiles": {
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string",
                        "pattern": "*github.com/graphops/launchpad-namespaces.git@postgres-operator/helmfile.yaml*"
                    },
                    "values": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/namespaces.postgresOperator.values"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/namespaces.postgresOperator.values"
                                }
                            }
                        ]
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/base.helmfiles"
                    },
                    {
                        "required": [
                            "path"
                        ]
                    }
                ]
            },
            "namespaces.postgresOperator.meta": {
                "type": "object",
                "required": [
                    "name",
                    "url",
                    "description"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "enum": [
                            "postgres operator"
                        ]
                    },
                    "url": {
                        "type": "string",
                        "enum": [
                            "https://github.com/graphops/launchpad-namespaces/postgres-operator"
                        ]
                    },
                    "description": {
                        "type": "string",
                        "enum": [
                            "Extends your Kubernetes cluster with custom resources for easilly creating and managing Postgres databases"
                        ]
                    }
                }
            },
            "namespaces.postgresOperator.releases": {
                "type": "object",
                "required": [
                    "postgresOperator"
                ],
                "properties": {
                    "postgresOperator": {
                        "type": "object",
                        "required": [
                            "name",
                            "chart"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "enum": [
                                    "postgres-operator"
                                ]
                            },
                            "chart": {
                                "$ref": "#/components/schemas/repositories.postgres-operator-charts.charts.postgres-operator"
                            }
                        }
                    }
                }
            },
            "namespaces.postgresOperator.values": {
                "description": "Postgres-Operator namespace values interface schema",
                "type": "object",
                "properties": {
                    "targetNamespace": {
                        "type": "string",
                        "default": "postgres-operator"
                    },
                    "postgres-operator": {
                        "type": "object",
                        "properties": {
                            "mergeValues": {
                                "type": "boolean"
                            },
                            "values": {
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/map"
                                    },
                                    {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/map"
                                        }
                                    }
                                ]
                            }
                        }
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/base.values"
                    },
                    {
                        "required": [
                            "targetNamespace"
                        ]
                    }
                ]
            },
            "namespaces.sealedSecrets": {
                "type": "object",
                "required": [
                    "labels"
                ],
                "properties": {
                    "labels": {
                        "type": "object",
                        "properties": {
                            "launchpad.graphops.xyz/namespace": {
                                "type": "string",
                                "enum": [
                                    "sealed-secrets"
                                ]
                            }
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/base.labels"
                            },
                            {
                                "required": [
                                    "launchpad.graphops.xyz/namespace"
                                ]
                            }
                        ]
                    }
                }
            },
            "namespaces.sealedSecrets.helmfiles": {
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string",
                        "pattern": "*github.com/graphops/launchpad-namespaces.git@sealed-secrets/helmfile.yaml*"
                    },
                    "values": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/namespaces.sealedSecrets.values"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/namespaces.sealedSecrets.values"
                                }
                            }
                        ]
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/base.helmfiles"
                    },
                    {
                        "required": [
                            "path"
                        ]
                    }
                ]
            },
            "namespaces.sealedSecrets.meta": {
                "type": "object",
                "required": [
                    "name",
                    "url",
                    "description"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "enum": [
                            "sealed secrets"
                        ]
                    },
                    "url": {
                        "type": "string",
                        "enum": [
                            "https://github.com/graphops/launchpad-namespaces/sealed-secrets"
                        ]
                    },
                    "description": {
                        "type": "string",
                        "enum": [
                            "...TODO..."
                        ]
                    }
                }
            },
            "namespaces.sealedSecrets.releases": {
                "type": "object",
                "required": [
                    "sealedSecrets"
                ],
                "properties": {
                    "sealedSecrets": {
                        "type": "object",
                        "required": [
                            "name",
                            "chart"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "enum": [
                                    "sealed-secrets"
                                ]
                            },
                            "chart": {
                                "$ref": "#/components/schemas/repositories.sealed-secrets.charts.sealed-secrets"
                            }
                        }
                    }
                }
            },
            "namespaces.sealedSecrets.values": {
                "description": "Sealed-Secrets namespace values schema",
                "type": "object",
                "properties": {
                    "targetNamespace": {
                        "type": "string",
                        "default": "sealed-secrets"
                    },
                    "sealed-secrets": {
                        "type": "object",
                        "properties": {
                            "mergeValues": {
                                "type": "boolean"
                            },
                            "values": {
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/map"
                                    },
                                    {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/map"
                                        }
                                    }
                                ]
                            }
                        }
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/base.values"
                    },
                    {
                        "required": [
                            "targetNamespace"
                        ]
                    }
                ]
            },
            "namespaces.storage": {
                "type": "object",
                "required": [
                    "labels"
                ],
                "properties": {
                    "labels": {
                        "type": "object",
                        "properties": {
                            "launchpad.graphops.xyz/namespace": {
                                "type": "string",
                                "enum": [
                                    "storage"
                                ]
                            }
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/base.labels"
                            },
                            {
                                "required": [
                                    "launchpad.graphops.xyz/namespace"
                                ]
                            }
                        ]
                    }
                }
            },
            "namespaces.storage.features": {
                "description": "storage namespace features schema",
                "type": "object",
                "required": [
                    "openebs",
                    "zfs",
                    "rawfile"
                ],
                "properties": {
                    "openebs": {
                        "description": "for the core openebs release",
                        "type": "string",
                        "enum": [
                            "openebs"
                        ]
                    },
                    "zfs": {
                        "description": "include the localpv-zfs release and storageclass",
                        "type": "string",
                        "enum": [
                            "zfs"
                        ]
                    },
                    "rawfile": {
                        "description": "include the localpv-rawfile release and storageclass",
                        "type": "string",
                        "enum": [
                            "rawfile"
                        ]
                    }
                }
            },
            "namespaces.storage.features.enum": {
                "type": "string",
                "enum": [
                    "openebs",
                    "zfs",
                    "rawfile"
                ]
            },
            "namespaces.storage.helmfiles": {
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string",
                        "pattern": "*github.com/graphops/launchpad-namespaces.git@storage/helmfile.yaml*"
                    },
                    "values": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/namespaces.storage.values"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/namespaces.storage.values"
                                }
                            }
                        ]
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/base.helmfiles"
                    },
                    {
                        "required": [
                            "path"
                        ]
                    }
                ]
            },
            "namespaces.storage.meta": {
                "type": "object",
                "required": [
                    "name",
                    "url",
                    "description"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "enum": [
                            "storage"
                        ]
                    },
                    "url": {
                        "type": "string",
                        "enum": [
                            "https://github.com/graphops/launchpad-namespaces/storage"
                        ]
                    },
                    "description": {
                        "type": "string",
                        "enum": [
                            "...TODO..."
                        ]
                    }
                }
            },
            "namespaces.storage.releases": {
                "type": "object",
                "required": [
                    "openebs",
                    "openebsRawfileLocalpv",
                    "openebsRawfileStorageclass",
                    "openebsZfsLocalpv",
                    "openebsZfsStorageclass"
                ],
                "properties": {
                    "openebs": {
                        "type": "object",
                        "required": [
                            "name",
                            "chart"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "enum": [
                                    "openebs"
                                ]
                            },
                            "chart": {
                                "$ref": "#/components/schemas/repositories.openebs.charts.openebs"
                            }
                        }
                    },
                    "openebsRawfileLocalpv": {
                        "type": "object",
                        "required": [
                            "name",
                            "chart"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "enum": [
                                    "openebs-rawfile-localpv"
                                ]
                            },
                            "chart": {
                                "$ref": "#/components/schemas/repositories.graphops.charts.openebs-rawfile-localpv"
                            }
                        }
                    },
                    "openebsRawfileStorageclass": {
                        "type": "object",
                        "required": [
                            "name",
                            "chart"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "enum": [
                                    "openebs-rawfile-storageclass"
                                ]
                            },
                            "chart": {
                                "$ref": "#/components/schemas/repositories.graphops.charts.resource-injector"
                            }
                        }
                    },
                    "openebsZfsLocalpv": {
                        "type": "object",
                        "required": [
                            "name",
                            "chart"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "enum": [
                                    "openebs-zfs-localpv"
                                ]
                            },
                            "chart": {
                                "$ref": "#/components/schemas/repositories.openebs-zfs-localpv.charts.zfs-localpv"
                            }
                        }
                    },
                    "openebsZfsStorageclass": {
                        "type": "object",
                        "required": [
                            "name",
                            "chart"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "enum": [
                                    "openebs-zfs-storageclass"
                                ]
                            },
                            "chart": {
                                "$ref": "#/components/schemas/repositories.graphops.charts.resource-injector"
                            }
                        }
                    }
                }
            },
            "namespaces.storage.values": {
                "description": "Declaratively deploy [OpenEBS](https://openebs.io/) on your cluster",
                "type": "object",
                "properties": {
                    "targetNamespace": {
                        "type": "string",
                        "default": "storage"
                    },
                    "openebs": {
                        "description": "release key for overloading values \"\\(release)\"",
                        "type": "object",
                        "properties": {
                            "mergeValues": {
                                "type": "boolean",
                                "default": true
                            },
                            "values": {
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/map"
                                    },
                                    {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/map"
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "openebs-rawfile-localpv": {
                        "description": "release key for overloading values \"\\(release)\"",
                        "type": "object",
                        "properties": {
                            "mergeValues": {
                                "type": "boolean",
                                "default": true
                            },
                            "values": {
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/map"
                                    },
                                    {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/map"
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "openebs-rawfile-storageclass": {
                        "description": "release key for overloading values \"\\(release)\"",
                        "type": "object",
                        "properties": {
                            "mergeValues": {
                                "type": "boolean",
                                "default": true
                            },
                            "values": {
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/map"
                                    },
                                    {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/map"
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "openebs-zfs-localpv": {
                        "description": "release key for overloading values \"\\(release)\"",
                        "type": "object",
                        "properties": {
                            "mergeValues": {
                                "type": "boolean",
                                "default": true
                            },
                            "values": {
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/map"
                                    },
                                    {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/map"
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "features": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/namespaces.storage.features.enum"
                        },
                        "default": [
                            "openebs",
                            "rawfile"
                        ]
                    },
                    "openebs-zfs-storageclass": {
                        "description": "release key for overloading values \"\\(release)\"",
                        "type": "object",
                        "properties": {
                            "mergeValues": {
                                "type": "boolean",
                                "default": true
                            },
                            "values": {
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/map"
                                    },
                                    {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/map"
                                        }
                                    }
                                ]
                            }
                        }
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/base.values"
                    },
                    {
                        "required": [
                            "targetNamespace"
                        ]
                    }
                ]
            },
            "repositories.deliveryhero.charts.node-problem-detector": {
                "type": "object",
                "required": [
                    "url",
                    "description"
                ],
                "properties": {
                    "url": {
                        "type": "string",
                        "enum": [
                            "https://github.com/deliveryhero/helm-charts/tree/master/stable/node-problem-detector"
                        ]
                    },
                    "description": {
                        "type": "string",
                        "enum": [
                            "This chart installs a node-problem-detector daemonset. This tool aims to make various node problems visible to the upstream layers in cluster management stack."
                        ]
                    }
                }
            },
            "repositories.grafana.charts.loki-distributed": {
                "type": "object",
                "required": [
                    "url",
                    "description"
                ],
                "properties": {
                    "url": {
                        "type": "string",
                        "enum": [
                            "https://github.com/grafana/helm-charts/tree/main/charts/loki-distributed"
                        ]
                    },
                    "description": {
                        "type": "string",
                        "enum": [
                            "Helm chart for Grafana Loki in microservices mode"
                        ]
                    }
                }
            },
            "repositories.grafana.charts.promtail": {
                "type": "object",
                "required": [
                    "url",
                    "description"
                ],
                "properties": {
                    "url": {
                        "type": "string",
                        "enum": [
                            "https://github.com/grafana/helm-charts/tree/main/charts/promtail"
                        ]
                    },
                    "description": {
                        "type": "string",
                        "enum": [
                            "Promtail is an agent which ships the contents of local logs to a Loki instance"
                        ]
                    }
                }
            },
            "repositories.graphops.charts.erigon": {
                "type": "object",
                "required": [
                    "url",
                    "description"
                ],
                "properties": {
                    "url": {
                        "type": "string",
                        "enum": [
                            "https://github.com/ledgerwatch/erigon"
                        ]
                    },
                    "description": {
                        "type": "string",
                        "enum": [
                            "Erigon is an implementation of Ethereum (execution client with light client for consensus layer), on the efficiency frontier."
                        ]
                    }
                }
            },
            "repositories.graphops.charts.nimbus": {
                "type": "object",
                "required": [
                    "url",
                    "description"
                ],
                "properties": {
                    "url": {
                        "type": "string",
                        "enum": [
                            "https://github.com/status-im/nimbus-eth2"
                        ]
                    },
                    "description": {
                        "type": "string",
                        "enum": [
                            "Nimbus-eth2 is an extremely efficient consensus layer (eth2) client implementation."
                        ]
                    }
                }
            },
            "repositories.graphops.charts.openebs-rawfile-localpv": {
                "type": "object",
                "required": [
                    "url",
                    "description"
                ],
                "properties": {
                    "url": {
                        "type": "string",
                        "enum": [
                            "https://github.com/graphops/launchpad-charts/tree/main/charts/openebs-rawfile-localpv"
                        ]
                    },
                    "description": {
                        "type": "string",
                        "enum": [
                            "RawFile Driver Container Storage Interface"
                        ]
                    }
                }
            },
            "repositories.graphops.charts.proxyd": {
                "type": "object",
                "required": [
                    "url",
                    "description"
                ],
                "properties": {
                    "url": {
                        "type": "string",
                        "enum": [
                            "https://github.com/ethereum-optimism/optimism/tree/develop/proxyd"
                        ]
                    },
                    "description": {
                        "type": "string",
                        "enum": [
                            "Proxyd is an EVM-blockchain JSON-RPC router and load balancer developed in Go by Optimism. It is capable of load balancing, automatic failover, intelligent request routing and very basic caching."
                        ]
                    }
                }
            },
            "repositories.graphops.charts.resource-injector": {
                "type": "object",
                "required": [
                    "url",
                    "description"
                ],
                "properties": {
                    "url": {
                        "type": "string",
                        "enum": [
                            "https://github.com/graphops/launchpad-charts/tree/main/charts/resource-injector"
                        ]
                    },
                    "description": {
                        "type": "string",
                        "enum": [
                            "Manage Raw Kubernetes Resources using Helm"
                        ]
                    }
                }
            },
            "repositories.ingress-nginx.charts.ingress-nginx": {
                "type": "object",
                "required": [
                    "url",
                    "description"
                ],
                "properties": {
                    "url": {
                        "type": "string",
                        "enum": [
                            "https://github.com/kubernetes/ingress-nginx/tree/main/charts/ingress-nginx"
                        ]
                    },
                    "description": {
                        "type": "string",
                        "enum": [
                            "ingress-nginx is an Ingress controller for Kubernetes using NGINX as a reverse proxy and load balancer."
                        ]
                    }
                }
            },
            "repositories.jetstack.charts.cert-manager": {
                "type": "object",
                "required": [
                    "url",
                    "description"
                ],
                "properties": {
                    "url": {
                        "type": "string",
                        "enum": [
                            "https://github.com/cert-manager/cert-manager"
                        ]
                    },
                    "description": {
                        "type": "string",
                        "enum": [
                            "cert-manager adds certificates and certificate issuers as resource types in Kubernetes clusters, and simplifies the process of obtaining, renewing and using those certificates."
                        ]
                    }
                }
            },
            "repositories.openebs-zfs-localpv.charts.zfs-localpv": {
                "type": "object",
                "required": [
                    "url",
                    "description"
                ],
                "properties": {
                    "url": {
                        "type": "string",
                        "enum": [
                            "https://github.com/openebs/zfs-localpv/tree/b70fb1e847b8c9ba32e3fd8cba877767686f6b26"
                        ]
                    },
                    "description": {
                        "type": "string",
                        "enum": [
                            "CSI driver for provisioning Local PVs backed by ZFS and more."
                        ]
                    }
                }
            },
            "repositories.openebs.charts.openebs": {
                "type": "object",
                "required": [
                    "url",
                    "description"
                ],
                "properties": {
                    "url": {
                        "type": "string",
                        "enum": [
                            "https://github.com/openebs/openebs"
                        ]
                    },
                    "description": {
                        "type": "string",
                        "enum": [
                            "OpenEBS is the leading open-source example of a category of cloud native storage solutions sometimes called Container Attached Storage."
                        ]
                    }
                }
            },
            "repositories.postgres-operator-charts.charts.postgres-operator": {
                "type": "object",
                "required": [
                    "url",
                    "description"
                ],
                "properties": {
                    "url": {
                        "type": "string",
                        "enum": [
                            "https://github.com/zalando/postgres-operator"
                        ]
                    },
                    "description": {
                        "type": "string",
                        "enum": [
                            "The Postgres Operator delivers an easy to run highly-available PostgreSQL clusters on Kubernetes (K8s) powered by Patroni."
                        ]
                    }
                }
            },
            "repositories.prometheus-community.charts.kube-prometheus-stack": {
                "type": "object",
                "required": [
                    "url",
                    "description"
                ],
                "properties": {
                    "url": {
                        "type": "string",
                        "enum": [
                            "https://github.com/prometheus-community/helm-charts/tree/main/charts/kube-prometheus-stack"
                        ]
                    },
                    "description": {
                        "type": "string",
                        "enum": [
                            "Installs the kube-prometheus stack, a collection of Kubernetes manifests, Grafana dashboards, and Prometheus rules"
                        ]
                    }
                }
            },
            "repositories.sealed-secrets.charts.sealed-secrets": {
                "type": "object",
                "required": [
                    "url",
                    "description"
                ],
                "properties": {
                    "url": {
                        "type": "string",
                        "enum": [
                            "https://github.com/bitnami/charts/tree/main/bitnami/sealed-secrets"
                        ]
                    },
                    "description": {
                        "type": "string",
                        "enum": [
                            "Sealed Secrets are 'one-way' encrypted K8s Secrets that can be created by anyone, but can only be decrypted by the controller running in the target cluster recovering the original object."
                        ]
                    }
                }
            }
        }
    }
}
