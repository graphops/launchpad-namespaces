{
    "openapi": "3.0.0",
    "info": {
        "description": "Launchpad Namespaces Schemas, by GraphOps (https://graphops.xyz)",
        "title": "schema:type=namespace schema:namespace=arbitrum",
        "version": "no version"
    },
    "paths": {},
    "components": {
        "schemas": {
            "base": {
                "description": "Launchpad Namespaces schemas, by GraphOps",
                "type": "object"
            },
            "base.helmfiles": {
                "type": "object",
                "properties": {
                    "apiVersions": {
                        "description": "Configure a fixed list of API versions to pass to 'helm\ntemplate' via the --api-versions flag with the below:",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "bases": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "environments": {
                        "description": "The list of environments managed by helmfile.",
                        "type": "object",
                        "default": {
                            "default": {}
                        },
                        "oneOf": [
                            {},
                            {
                                "required": [
                                    "default"
                                ],
                                "properties": {
                                    "default": {
                                        "type": "object"
                                    }
                                }
                            }
                        ]
                    },
                    "commonLabels": {
                        "$ref": "#/components/schemas/base.helmfiles.map"
                    },
                    "helmBinary": {
                        "description": "Path to alternative helm binary (--helm-binary)",
                        "type": "string"
                    },
                    "helmDefaults": {
                        "$ref": "#/components/schemas/base.helmfiles.helmDefaults"
                    },
                    "helmfiles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/base.helmfiles.helmfile"
                        }
                    },
                    "hooks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/base.helmfiles.hook"
                        }
                    },
                    "missingFileHandler": {
                        "$ref": "#/components/schemas/base.helmfiles.missingFileHandler"
                    },
                    "releases": {
                        "description": "Helmfile runs various helm commands to converge the current\nstate in the live cluster to the desired state defined here.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/base.helmfiles.release"
                        }
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/base.helmfiles.repository"
                        }
                    }
                }
            },
            "base.helmfiles.environment": {
                "type": "object",
                "properties": {
                    "values": {
                        "type": "array",
                        "items": {
                            "oneOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "$ref": "#/components/schemas/base.helmfiles.map"
                                }
                            ]
                        }
                    },
                    "secrets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "missingFileHandler": {
                        "$ref": "#/components/schemas/base.helmfiles.missingFileHandler"
                    },
                    "kubeContext": {
                        "type": "string"
                    }
                }
            },
            "base.helmfiles.helmDefaults": {
                "type": "object",
                "properties": {
                    "tillerNamespace": {
                        "type": "string"
                    },
                    "tillerless": {
                        "type": "boolean"
                    },
                    "kubeContext": {
                        "type": "string"
                    },
                    "cleanupOnFail": {
                        "type": "boolean"
                    },
                    "args": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "verify": {
                        "type": "boolean"
                    },
                    "wait": {
                        "type": "boolean"
                    },
                    "waitForJobs": {
                        "type": "boolean"
                    },
                    "timeout": {
                        "type": "number"
                    },
                    "recreatePods": {
                        "type": "boolean"
                    },
                    "force": {
                        "type": "boolean"
                    },
                    "tls": {
                        "type": "boolean"
                    },
                    "tlsCACert": {
                        "type": "string"
                    },
                    "tlsCert": {
                        "type": "string"
                    },
                    "tlsKey": {
                        "type": "string"
                    },
                    "historyMax": {
                        "description": "limit the maximum number of revisions saved per release. Use 0\nfor no limit.",
                        "type": "number",
                        "default": 10
                    },
                    "createNamespace": {
                        "type": "boolean"
                    }
                }
            },
            "base.helmfiles.helmfile": {
                "allOf": [
                    {
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "required": [
                                    "path"
                                ],
                                "properties": {
                                    "path": {
                                        "type": "string"
                                    },
                                    "selectors": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "values": {
                                        "type": "array",
                                        "items": {
                                            "allOf": [
                                                {
                                                    "oneOf": [
                                                        {
                                                            "type": "string"
                                                        },
                                                        {
                                                            "type": "object",
                                                            "properties": {
                                                                "key1": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "oneOf": [
                                                        {
                                                            "type": "string"
                                                        },
                                                        {
                                                            "type": "object"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object"
                            }
                        ]
                    }
                ]
            },
            "base.helmfiles.hook": {
                "type": "object",
                "properties": {
                    "events": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "showlogs": {
                        "type": "boolean"
                    },
                    "command": {
                        "type": "string"
                    },
                    "args": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "base.helmfiles.map": {
                "type": "object"
            },
            "base.helmfiles.missingFileHandler": {
                "type": "string",
                "enum": [
                    "Error",
                    "Warn",
                    "Info",
                    "Debug"
                ]
            },
            "base.helmfiles.release": {
                "type": "object",
                "required": [
                    "chart",
                    "name"
                ],
                "properties": {
                    "atomic": {
                        "type": "boolean"
                    },
                    "chart": {
                        "type": "string"
                    },
                    "cleanupOnFail": {
                        "type": "boolean",
                        "default": false
                    },
                    "condition": {
                        "type": "string"
                    },
                    "createNamespace": {
                        "type": "boolean"
                    },
                    "devel": {
                        "description": "if used with charts museum allows to pull unstable charts for\ndeployment, for example: if 1.2.3 and 1.2.4-dev versions exist\nand set to true, 1.2.4-dev will be pulled (default false)",
                        "type": "boolean",
                        "default": false
                    },
                    "disableValidation": {
                        "type": "boolean"
                    },
                    "disableValidationOnInstall": {
                        "type": "boolean"
                    },
                    "disableOpenAPIValidation": {
                        "type": "boolean"
                    },
                    "force": {
                        "type": "boolean"
                    },
                    "historyMax": {
                        "type": "number"
                    },
                    "hooks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/base.helmfiles.hook"
                        }
                    },
                    "installed": {
                        "oneOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "object"
                            }
                        ]
                    },
                    "kubeContext": {
                        "type": "string"
                    },
                    "labels": {
                        "$ref": "#/components/schemas/base.helmfiles.map"
                    },
                    "missingFileHandler": {
                        "$ref": "#/components/schemas/base.helmfiles.missingFileHandler"
                    },
                    "name": {
                        "type": "string"
                    },
                    "namespace": {
                        "type": "string"
                    },
                    "recreatePods": {
                        "type": "boolean"
                    },
                    "secrets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "set": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "oneOf": [
                                {
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "file": {
                                            "type": "string"
                                        }
                                    }
                                },
                                {
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "values": {
                                            "type": "array",
                                            "items": {
                                                "type": "number"
                                            }
                                        }
                                    }
                                },
                                {
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "skipDeps": {
                        "description": "When set to `true`, skips running `helm dep up` and `helm dep\nbuild` on this release's chart.",
                        "type": "boolean",
                        "default": false
                    },
                    "tillerNamespace": {
                        "type": "string"
                    },
                    "tillerless": {
                        "type": "boolean"
                    },
                    "timeout": {
                        "type": "number"
                    },
                    "tls": {
                        "type": "boolean"
                    },
                    "tlsCACert": {
                        "type": "string"
                    },
                    "tlsCert": {
                        "type": "string"
                    },
                    "tlsKey": {
                        "type": "string"
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "oneOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "$ref": "#/components/schemas/base.helmfiles.map"
                                }
                            ]
                        }
                    },
                    "verify": {
                        "type": "boolean"
                    },
                    "version": {
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "allOf": [
                                    {
                                        "type": "number"
                                    },
                                    {
                                        "not": {
                                            "anyOf": [
                                                {
                                                    "type": "integer"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            {
                                "type": "integer"
                            }
                        ]
                    },
                    "wait": {
                        "type": "boolean"
                    },
                    "waitForJobs": {
                        "type": "boolean"
                    }
                }
            },
            "base.helmfiles.repository": {
                "type": "object",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "certFile": {
                        "type": "string"
                    },
                    "keyFile": {
                        "type": "string"
                    },
                    "caFile": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "oci": {
                        "type": "boolean"
                    },
                    "passCredentials": {
                        "type": "boolean"
                    }
                }
            },
            "base.labels": {
                "type": "object"
            },
            "base.values": {
                "description": "Base namespace values interface schema",
                "type": "object",
                "required": [
                    "targetNamespace"
                ],
                "properties": {
                    "helmDefaults": {
                        "$ref": "#/components/schemas/helmDefaults"
                    },
                    "targetNamespace": {
                        "description": "Sets the cluster namespace in which the releases will be deployed",
                        "type": "string"
                    },
                    "annotations": {
                        "description": "Add annotations to releases on this namespace",
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/map"
                            }
                        ]
                    },
                    "labels": {
                        "description": "Adds labels to releases on this namespace",
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/map"
                            }
                        ]
                    }
                }
            },
            "helmDefaults": {
                "type": "object",
                "properties": {
                    "tillerNamespace": {
                        "type": "string"
                    },
                    "tillerless": {
                        "type": "boolean"
                    },
                    "kubeContext": {
                        "type": "string"
                    },
                    "cleanupOnFail": {
                        "type": "boolean"
                    },
                    "args": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "verify": {
                        "type": "boolean"
                    },
                    "wait": {
                        "type": "boolean"
                    },
                    "waitForJobs": {
                        "type": "boolean"
                    },
                    "timeout": {
                        "type": "number"
                    },
                    "recreatePods": {
                        "type": "boolean"
                    },
                    "force": {
                        "type": "boolean"
                    },
                    "tls": {
                        "type": "boolean"
                    },
                    "tlsCACert": {
                        "type": "string"
                    },
                    "tlsCert": {
                        "type": "string"
                    },
                    "tlsKey": {
                        "type": "string"
                    },
                    "historyMax": {
                        "description": "limit the maximum number of revisions saved per release. Use 0\nfor no limit.",
                        "type": "number",
                        "default": 10
                    },
                    "createNamespace": {
                        "type": "boolean"
                    }
                }
            },
            "helmfile": {
                "allOf": [
                    {
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "required": [
                                    "path"
                                ],
                                "properties": {
                                    "path": {
                                        "type": "string"
                                    },
                                    "selectors": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "values": {
                                        "type": "array",
                                        "items": {
                                            "allOf": [
                                                {
                                                    "oneOf": [
                                                        {
                                                            "type": "string"
                                                        },
                                                        {
                                                            "type": "object",
                                                            "properties": {
                                                                "key1": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "oneOf": [
                                                        {
                                                            "type": "string"
                                                        },
                                                        {
                                                            "type": "object"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object"
                            }
                        ]
                    }
                ]
            },
            "map": {
                "type": "object"
            },
            "namespaces": {
                "description": "charts \"graphops.xyz/launchpad/namespaces:LaunchpadCharts\"",
                "type": "object"
            },
            "namespaces.arbitrum": {
                "description": "Arbitrum *Namespace* values interface",
                "type": "object",
                "required": [
                    "meta",
                    "releases",
                    "labels"
                ],
                "properties": {
                    "meta": {
                        "type": "object",
                        "required": [
                            "name",
                            "url",
                            "description"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "enum": [
                                    "arbitrum"
                                ]
                            },
                            "url": {
                                "type": "string",
                                "enum": [
                                    "https://github.com/graphops/launchpad-namespaces/arbitrum"
                                ]
                            },
                            "description": {
                                "type": "string",
                                "enum": [
                                    "This *Namespace* provides a suitable stack to operate Arbitrum mainnet archive nodes."
                                ]
                            }
                        }
                    },
                    "releases": {
                        "type": "object",
                        "required": [
                            "arbitrum-nitro",
                            "arbitrum-classic",
                            "proxyd"
                        ],
                        "properties": {
                            "arbitrum-nitro": {
                                "type": "object",
                                "required": [
                                    "chart"
                                ],
                                "properties": {
                                    "chart": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "repository",
                                            "description",
                                            "name"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/OffchainLabs/nitro/"
                                                ]
                                            },
                                            "repository": {
                                                "type": "string",
                                                "enum": [
                                                    "graphops"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "Nitro is the latest iteration of the Arbitrum technology. It is a fully integrated, complete layer 2 optimistic rollup system, including fraud proofs, the sequencer, the token bridges, advanced calldata compression, and more."
                                                ]
                                            },
                                            "name": {
                                                "type": "string",
                                                "enum": [
                                                    "arbitrum-nitro"
                                                ]
                                            }
                                        }
                                    }
                                }
                            },
                            "arbitrum-classic": {
                                "type": "object",
                                "required": [
                                    "chart"
                                ],
                                "properties": {
                                    "chart": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "repository",
                                            "description",
                                            "name"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/OffchainLabs/arbitrum-classic"
                                                ]
                                            },
                                            "repository": {
                                                "type": "string",
                                                "enum": [
                                                    "graphops"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "The old \"classic\" Arbitrum tech stack."
                                                ]
                                            },
                                            "name": {
                                                "type": "string",
                                                "enum": [
                                                    "arbitrum-classic"
                                                ]
                                            }
                                        }
                                    }
                                }
                            },
                            "proxyd": {
                                "type": "object",
                                "required": [
                                    "chart"
                                ],
                                "properties": {
                                    "chart": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "repository",
                                            "description",
                                            "name"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/ethereum-optimism/optimism/tree/develop/proxyd"
                                                ]
                                            },
                                            "repository": {
                                                "type": "string",
                                                "enum": [
                                                    "graphops"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "Proxyd is an EVM-blockchain JSON-RPC router and load balancer developed in Go by Optimism. It is capable of load balancing, automatic failover, intelligent request routing and very basic caching."
                                                ]
                                            },
                                            "name": {
                                                "type": "string",
                                                "enum": [
                                                    "proxyd"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "labels": {
                        "type": "object",
                        "properties": {
                            "launchpad.graphops.xyz/namespace": {
                                "type": "string",
                                "enum": [
                                    "arbitrum"
                                ]
                            }
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/base.labels"
                            },
                            {
                                "required": [
                                    "launchpad.graphops.xyz/namespace"
                                ]
                            }
                        ]
                    }
                }
            },
            "namespaces.arbitrum.flavor": {
                "description": "Suitable defaults for a mainnet archive node",
                "type": "object"
            },
            "namespaces.arbitrum.flavor.enum": {
                "$ref": "#/components/schemas/namespaces.arbitrum.flavor.mainnet"
            },
            "namespaces.arbitrum.flavor.mainnet": {
                "type": "string",
                "enum": [
                    "mainnet"
                ]
            },
            "namespaces.arbitrum.helmfiles": {
                "description": "Arbitrum helmfile schema",
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string",
                        "pattern": "*github.com/graphops/launchpad-namespaces.git@arbitrum/helmfile.yaml*"
                    },
                    "values": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/namespaces.arbitrum.values"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/namespaces.arbitrum.values"
                                }
                            }
                        ]
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/base.helmfiles"
                    },
                    {
                        "required": [
                            "path"
                        ]
                    }
                ]
            },
            "namespaces.arbitrum.values": {
                "description": "Arbitrum",
                "type": "object",
                "properties": {
                    "targetNamespace": {
                        "description": "the default is arbitrum-(flavor)",
                        "type": "string",
                        "default": "arbitrum-mainnet"
                    },
                    "flavor": {
                        "$ref": "#/components/schemas/namespaces.arbitrum.flavor.enum"
                    },
                    "arbitrum-nitro": {
                        "$ref": "#/components/schemas/namespaces.arbitrum.values.releaseValues"
                    },
                    "arbitrum-classic": {
                        "$ref": "#/components/schemas/namespaces.arbitrum.values.releaseValues"
                    },
                    "proxyd": {
                        "$ref": "#/components/schemas/namespaces.arbitrum.values.releaseValues"
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/base.values"
                    }
                ]
            },
            "namespaces.arbitrum.values.releaseValues": {
                "type": "object",
                "properties": {
                    "mergeValues": {
                        "type": "boolean",
                        "default": true
                    },
                    "values": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/map"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/map"
                                }
                            }
                        ]
                    }
                }
            },
            "namespaces.avalanche": {
                "description": "Avalanche *Namespace*",
                "type": "object",
                "required": [
                    "meta",
                    "releases",
                    "labels"
                ],
                "properties": {
                    "meta": {
                        "type": "object",
                        "required": [
                            "name",
                            "url",
                            "description"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "enum": [
                                    "avalanche"
                                ]
                            },
                            "url": {
                                "type": "string",
                                "enum": [
                                    "https://github.com/graphops/launchpad-namespaces/avalanche"
                                ]
                            },
                            "description": {
                                "type": "string",
                                "enum": [
                                    "This *Namespace* provides a suitable stack to operate Avalanche mainnet archive nodes."
                                ]
                            }
                        }
                    },
                    "releases": {
                        "type": "object",
                        "required": [
                            "avalanche",
                            "proxyd"
                        ],
                        "properties": {
                            "avalanche": {
                                "type": "object",
                                "required": [
                                    "chart"
                                ],
                                "properties": {
                                    "chart": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "repository",
                                            "description",
                                            "name"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/ava-labs/avalanchego"
                                                ]
                                            },
                                            "repository": {
                                                "type": "string",
                                                "enum": [
                                                    "graphops"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "Node implementation for the Avalanche network - a blockchains platform with high throughput, and blazing fast transactions."
                                                ]
                                            },
                                            "name": {
                                                "type": "string",
                                                "enum": [
                                                    "avalanche"
                                                ]
                                            }
                                        }
                                    }
                                }
                            },
                            "proxyd": {
                                "type": "object",
                                "required": [
                                    "chart"
                                ],
                                "properties": {
                                    "chart": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "repository",
                                            "description",
                                            "name"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/ethereum-optimism/optimism/tree/develop/proxyd"
                                                ]
                                            },
                                            "repository": {
                                                "type": "string",
                                                "enum": [
                                                    "graphops"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "Proxyd is an EVM-blockchain JSON-RPC router and load balancer developed in Go by Optimism. It is capable of load balancing, automatic failover, intelligent request routing and very basic caching."
                                                ]
                                            },
                                            "name": {
                                                "type": "string",
                                                "enum": [
                                                    "proxyd"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "labels": {
                        "type": "object",
                        "properties": {
                            "launchpad.graphops.xyz/namespace": {
                                "type": "string",
                                "enum": [
                                    "avalanche"
                                ]
                            }
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/base.labels"
                            },
                            {
                                "required": [
                                    "launchpad.graphops.xyz/namespace"
                                ]
                            }
                        ]
                    }
                }
            },
            "namespaces.avalanche.flavor": {
                "type": "object"
            },
            "namespaces.avalanche.flavor.enum": {
                "$ref": "#/components/schemas/namespaces.avalanche.flavor.mainnet"
            },
            "namespaces.avalanche.flavor.mainnet": {
                "description": "suitable defaults for a mainnet archive node",
                "type": "string",
                "enum": [
                    "mainnet"
                ]
            },
            "namespaces.avalanche.helmfiles": {
                "description": "avalanche helmfile API",
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string",
                        "pattern": "*github.com/graphops/launchpad-namespaces.git@avalanche/helmfile.yaml*"
                    },
                    "values": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/namespaces.avalanche.values"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/namespaces.avalanche.values"
                                }
                            }
                        ]
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/base.helmfiles"
                    },
                    {
                        "required": [
                            "path"
                        ]
                    }
                ]
            },
            "namespaces.avalanche.values": {
                "description": "avalanche namespace values schema",
                "type": "object",
                "properties": {
                    "targetNamespace": {
                        "description": "the default is avalanche-<flavor>",
                        "type": "string",
                        "default": "avalanche-mainnet"
                    },
                    "flavor": {
                        "$ref": "#/components/schemas/namespaces.avalanche.flavor.enum"
                    },
                    "avalanche": {
                        "$ref": "#/components/schemas/namespaces.avalanche.values.releaseValues"
                    },
                    "proxyd": {
                        "$ref": "#/components/schemas/namespaces.avalanche.values.releaseValues"
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/base.values"
                    }
                ]
            },
            "namespaces.avalanche.values.releaseValues": {
                "type": "object",
                "properties": {
                    "mergeValues": {
                        "type": "boolean",
                        "default": true
                    },
                    "values": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/map"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/map"
                                }
                            }
                        ]
                    }
                }
            },
            "namespaces.celo": {
                "description": "Celo *Namespace*",
                "type": "object",
                "required": [
                    "meta",
                    "releases",
                    "labels"
                ],
                "properties": {
                    "meta": {
                        "type": "object",
                        "required": [
                            "name",
                            "url",
                            "description"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "enum": [
                                    "celo"
                                ]
                            },
                            "url": {
                                "type": "string",
                                "enum": [
                                    "https://github.com/graphops/launchpad-namespaces/celo"
                                ]
                            },
                            "description": {
                                "type": "string",
                                "enum": [
                                    "This *Namespace* provides a suitable stack to operate Celo mainnet archive nodes."
                                ]
                            }
                        }
                    },
                    "releases": {
                        "type": "object",
                        "required": [
                            "celo",
                            "proxyd"
                        ],
                        "properties": {
                            "celo": {
                                "type": "object",
                                "required": [
                                    "chart"
                                ],
                                "properties": {
                                    "chart": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "repository",
                                            "description",
                                            "name"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/celo-org/celo-blockchain"
                                                ]
                                            },
                                            "repository": {
                                                "type": "string",
                                                "enum": [
                                                    "graphops"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "Official golang implementation of the Celo blockchain"
                                                ]
                                            },
                                            "name": {
                                                "type": "string",
                                                "enum": [
                                                    "celo"
                                                ]
                                            }
                                        }
                                    }
                                }
                            },
                            "proxyd": {
                                "type": "object",
                                "required": [
                                    "chart"
                                ],
                                "properties": {
                                    "chart": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "repository",
                                            "description",
                                            "name"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/ethereum-optimism/optimism/tree/develop/proxyd"
                                                ]
                                            },
                                            "repository": {
                                                "type": "string",
                                                "enum": [
                                                    "graphops"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "Proxyd is an EVM-blockchain JSON-RPC router and load balancer developed in Go by Optimism. It is capable of load balancing, automatic failover, intelligent request routing and very basic caching."
                                                ]
                                            },
                                            "name": {
                                                "type": "string",
                                                "enum": [
                                                    "proxyd"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "labels": {
                        "type": "object",
                        "properties": {
                            "launchpad.graphops.xyz/namespace": {
                                "type": "string",
                                "enum": [
                                    "celo"
                                ]
                            }
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/base.labels"
                            },
                            {
                                "required": [
                                    "launchpad.graphops.xyz/namespace"
                                ]
                            }
                        ]
                    }
                }
            },
            "namespaces.celo.flavor": {
                "type": "object"
            },
            "namespaces.celo.flavor.enum": {
                "$ref": "#/components/schemas/namespaces.celo.flavor.mainnet"
            },
            "namespaces.celo.flavor.mainnet": {
                "description": "suitable defaults for a mainnet archive node",
                "type": "string",
                "enum": [
                    "mainnet"
                ]
            },
            "namespaces.celo.helmfiles": {
                "description": "celo helmfile API",
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string",
                        "pattern": "*github.com/graphops/launchpad-namespaces.git@celo/helmfile.yaml*"
                    },
                    "values": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/namespaces.celo.values"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/namespaces.celo.values"
                                }
                            }
                        ]
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/base.helmfiles"
                    },
                    {
                        "required": [
                            "path"
                        ]
                    }
                ]
            },
            "namespaces.celo.values": {
                "description": "celo namespace values schema",
                "type": "object",
                "properties": {
                    "targetNamespace": {
                        "description": "the default is celo-<flavor>",
                        "type": "string",
                        "default": "celo-mainnet"
                    },
                    "flavor": {
                        "$ref": "#/components/schemas/namespaces.celo.flavor.enum"
                    },
                    "celo": {
                        "$ref": "#/components/schemas/namespaces.celo.values.releaseValues"
                    },
                    "proxyd": {
                        "$ref": "#/components/schemas/namespaces.celo.values.releaseValues"
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/base.values"
                    }
                ]
            },
            "namespaces.celo.values.releaseValues": {
                "type": "object",
                "properties": {
                    "mergeValues": {
                        "type": "boolean",
                        "default": true
                    },
                    "values": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/map"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/map"
                                }
                            }
                        ]
                    }
                }
            },
            "namespaces.ethereum": {
                "description": "Ethereum *Namespace*",
                "type": "object",
                "required": [
                    "meta",
                    "releases",
                    "labels"
                ],
                "properties": {
                    "meta": {
                        "type": "object",
                        "required": [
                            "name",
                            "url",
                            "description"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "enum": [
                                    "ethereum"
                                ]
                            },
                            "url": {
                                "type": "string",
                                "enum": [
                                    "https://github.com/graphops/launchpad-namespaces/ethereum"
                                ]
                            },
                            "description": {
                                "type": "string",
                                "enum": [
                                    "This *Namespace* provides a suitable stack to operate Ethereum mainnet and göerli archive nodes."
                                ]
                            }
                        }
                    },
                    "releases": {
                        "type": "object",
                        "required": [
                            "erigon",
                            "nimbus",
                            "proxyd"
                        ],
                        "properties": {
                            "erigon": {
                                "type": "object",
                                "required": [
                                    "chart"
                                ],
                                "properties": {
                                    "chart": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "repository",
                                            "description",
                                            "name"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/ledgerwatch/erigon"
                                                ]
                                            },
                                            "repository": {
                                                "type": "string",
                                                "enum": [
                                                    "graphops"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "Erigon is an implementation of Ethereum (execution client with light client for consensus layer), on the efficiency frontier."
                                                ]
                                            },
                                            "name": {
                                                "type": "string",
                                                "enum": [
                                                    "erigon"
                                                ]
                                            }
                                        }
                                    }
                                }
                            },
                            "nimbus": {
                                "type": "object",
                                "required": [
                                    "chart"
                                ],
                                "properties": {
                                    "chart": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "repository",
                                            "description",
                                            "name"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/status-im/nimbus-eth2"
                                                ]
                                            },
                                            "repository": {
                                                "type": "string",
                                                "enum": [
                                                    "graphops"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "Nimbus-eth2 is an extremely efficient consensus layer (eth2) client implementation."
                                                ]
                                            },
                                            "name": {
                                                "type": "string",
                                                "enum": [
                                                    "nimbus"
                                                ]
                                            }
                                        }
                                    }
                                }
                            },
                            "proxyd": {
                                "type": "object",
                                "required": [
                                    "chart"
                                ],
                                "properties": {
                                    "chart": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "repository",
                                            "description",
                                            "name"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/ethereum-optimism/optimism/tree/develop/proxyd"
                                                ]
                                            },
                                            "repository": {
                                                "type": "string",
                                                "enum": [
                                                    "graphops"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "Proxyd is an EVM-blockchain JSON-RPC router and load balancer developed in Go by Optimism. It is capable of load balancing, automatic failover, intelligent request routing and very basic caching."
                                                ]
                                            },
                                            "name": {
                                                "type": "string",
                                                "enum": [
                                                    "proxyd"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "labels": {
                        "type": "object",
                        "properties": {
                            "launchpad.graphops.xyz/namespace": {
                                "type": "string",
                                "enum": [
                                    "ethereum"
                                ]
                            }
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/base.labels"
                            },
                            {
                                "required": [
                                    "launchpad.graphops.xyz/namespace"
                                ]
                            }
                        ]
                    }
                }
            },
            "namespaces.ethereum.flavor": {
                "type": "object"
            },
            "namespaces.ethereum.flavor.enum": {
                "type": "string",
                "enum": [
                    "mainnet",
                    "goerli"
                ]
            },
            "namespaces.ethereum.flavor.goerli": {
                "description": "suitable defaults for a göerli archive node",
                "type": "string",
                "enum": [
                    "goerli"
                ]
            },
            "namespaces.ethereum.flavor.mainnet": {
                "description": "suitable defaults for a mainnet archive node",
                "type": "string",
                "enum": [
                    "mainnet"
                ]
            },
            "namespaces.ethereum.helmfiles": {
                "description": "ethereum helmfile API",
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string",
                        "pattern": "*github.com/graphops/launchpad-namespaces.git@ethereum/helmfile.yaml*"
                    },
                    "values": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/namespaces.ethereum.values"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/namespaces.ethereum.values"
                                }
                            }
                        ]
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/base.helmfiles"
                    },
                    {
                        "required": [
                            "path"
                        ]
                    }
                ]
            },
            "namespaces.ethereum.values": {
                "description": "eth-erigon namespace values schema",
                "type": "object",
                "properties": {
                    "targetNamespace": {
                        "description": "the default is eth-<flavor>",
                        "type": "string",
                        "default": "eth-mainnet"
                    },
                    "flavor": {
                        "$ref": "#/components/schemas/namespaces.ethereum.flavor.enum"
                    },
                    "erigon": {
                        "$ref": "#/components/schemas/namespaces.ethereum.values.releaseValues"
                    },
                    "nimbus": {
                        "$ref": "#/components/schemas/namespaces.ethereum.values.releaseValues"
                    },
                    "proxyd": {
                        "$ref": "#/components/schemas/namespaces.ethereum.values.releaseValues"
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/base.values"
                    }
                ]
            },
            "namespaces.ethereum.values.releaseValues": {
                "type": "object",
                "properties": {
                    "mergeValues": {
                        "type": "boolean",
                        "default": true
                    },
                    "values": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/map"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/map"
                                }
                            }
                        ]
                    }
                }
            },
            "namespaces.gnosis": {
                "description": "Gnosis *Namespace*",
                "type": "object",
                "required": [
                    "meta",
                    "releases",
                    "labels"
                ],
                "properties": {
                    "meta": {
                        "type": "object",
                        "required": [
                            "name",
                            "url",
                            "description"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "enum": [
                                    "gnosis"
                                ]
                            },
                            "url": {
                                "type": "string",
                                "enum": [
                                    "https://github.com/graphops/launchpad-namespaces/gnosis"
                                ]
                            },
                            "description": {
                                "type": "string",
                                "enum": [
                                    "This *Namespace* provides a suitable stack to operate Gnosis mainnet archive nodes."
                                ]
                            }
                        }
                    },
                    "releases": {
                        "type": "object",
                        "required": [
                            "nethermind",
                            "nimbus",
                            "proxyd"
                        ],
                        "properties": {
                            "nethermind": {
                                "type": "object",
                                "required": [
                                    "chart"
                                ],
                                "properties": {
                                    "chart": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "repository",
                                            "description",
                                            "name"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/NethermindEth/nethermind"
                                                ]
                                            },
                                            "repository": {
                                                "type": "string",
                                                "enum": [
                                                    "graphops"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "Nethermind is a high-performance, highly configurable full Ethereum protocol execution client built on .NET that runs on Linux, Windows, and macOS, and supports Clique, Aura, and Ethash."
                                                ]
                                            },
                                            "name": {
                                                "type": "string",
                                                "enum": [
                                                    "nethermind"
                                                ]
                                            }
                                        }
                                    }
                                }
                            },
                            "nimbus": {
                                "type": "object",
                                "required": [
                                    "chart"
                                ],
                                "properties": {
                                    "chart": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "repository",
                                            "description",
                                            "name"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/status-im/nimbus-eth2"
                                                ]
                                            },
                                            "repository": {
                                                "type": "string",
                                                "enum": [
                                                    "graphops"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "Nimbus-eth2 is an extremely efficient consensus layer (eth2) client implementation."
                                                ]
                                            },
                                            "name": {
                                                "type": "string",
                                                "enum": [
                                                    "nimbus"
                                                ]
                                            }
                                        }
                                    }
                                }
                            },
                            "proxyd": {
                                "type": "object",
                                "required": [
                                    "chart"
                                ],
                                "properties": {
                                    "chart": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "repository",
                                            "description",
                                            "name"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/ethereum-optimism/optimism/tree/develop/proxyd"
                                                ]
                                            },
                                            "repository": {
                                                "type": "string",
                                                "enum": [
                                                    "graphops"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "Proxyd is an EVM-blockchain JSON-RPC router and load balancer developed in Go by Optimism. It is capable of load balancing, automatic failover, intelligent request routing and very basic caching."
                                                ]
                                            },
                                            "name": {
                                                "type": "string",
                                                "enum": [
                                                    "proxyd"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "labels": {
                        "type": "object",
                        "properties": {
                            "launchpad.graphops.xyz/namespace": {
                                "type": "string",
                                "enum": [
                                    "gnosis"
                                ]
                            }
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/base.labels"
                            },
                            {
                                "required": [
                                    "launchpad.graphops.xyz/namespace"
                                ]
                            }
                        ]
                    }
                }
            },
            "namespaces.gnosis.flavor": {
                "type": "object"
            },
            "namespaces.gnosis.flavor.enum": {
                "$ref": "#/components/schemas/namespaces.gnosis.flavor.mainnet"
            },
            "namespaces.gnosis.flavor.mainnet": {
                "description": "suitable defaults for a mainnet archive node",
                "type": "string",
                "enum": [
                    "mainnet"
                ]
            },
            "namespaces.gnosis.helmfiles": {
                "description": "gnosis helmfile API",
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string",
                        "pattern": "*github.com/graphops/launchpad-namespaces.git@gnosis/helmfile.yaml*"
                    },
                    "values": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/namespaces.gnosis.values"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/namespaces.gnosis.values"
                                }
                            }
                        ]
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/base.helmfiles"
                    },
                    {
                        "required": [
                            "path"
                        ]
                    }
                ]
            },
            "namespaces.gnosis.values": {
                "description": "gnosis namespace values schema",
                "type": "object",
                "properties": {
                    "targetNamespace": {
                        "description": "the default is gnosis-<flavor>",
                        "type": "string",
                        "default": "gnosis-mainnet"
                    },
                    "flavor": {
                        "$ref": "#/components/schemas/namespaces.gnosis.flavor.enum"
                    },
                    "nethermind": {
                        "$ref": "#/components/schemas/namespaces.gnosis.values.releaseValues"
                    },
                    "nimbus": {
                        "$ref": "#/components/schemas/namespaces.gnosis.values.releaseValues"
                    },
                    "proxyd": {
                        "$ref": "#/components/schemas/namespaces.gnosis.values.releaseValues"
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/base.values"
                    }
                ]
            },
            "namespaces.gnosis.values.releaseValues": {
                "type": "object",
                "properties": {
                    "mergeValues": {
                        "type": "boolean",
                        "default": true
                    },
                    "values": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/map"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/map"
                                }
                            }
                        ]
                    }
                }
            },
            "namespaces.graph": {
                "description": "Graph *Namespace*",
                "type": "object",
                "required": [
                    "meta",
                    "releases",
                    "labels"
                ],
                "properties": {
                    "meta": {
                        "type": "object",
                        "required": [
                            "name",
                            "url",
                            "description"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "enum": [
                                    "graph"
                                ]
                            },
                            "url": {
                                "type": "string",
                                "enum": [
                                    "https://github.com/graphops/launchpad-namespaces/graph"
                                ]
                            },
                            "description": {
                                "type": "string",
                                "enum": [
                                    "This *Namespace* provides the necessary software to run a Graph Node and participate\nin the Graph Protocol Network"
                                ]
                            }
                        }
                    },
                    "releases": {
                        "type": "object",
                        "required": [
                            "graph-node",
                            "graph-network-indexer",
                            "graph-toolbox"
                        ],
                        "properties": {
                            "graph-node": {
                                "type": "object",
                                "required": [
                                    "chart"
                                ],
                                "properties": {
                                    "chart": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "repository",
                                            "description",
                                            "name"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/graphprotocol/graph-node"
                                                ]
                                            },
                                            "repository": {
                                                "type": "string",
                                                "enum": [
                                                    "graphops"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "Graph Node is an open source Rust implementation that event sources the Ethereum blockchain to deterministically update a data store that can be queried via the GraphQL endpoint."
                                                ]
                                            },
                                            "name": {
                                                "type": "string",
                                                "enum": [
                                                    "graph-node"
                                                ]
                                            }
                                        }
                                    }
                                }
                            },
                            "graph-network-indexer": {
                                "type": "object",
                                "required": [
                                    "chart"
                                ],
                                "properties": {
                                    "chart": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "repository",
                                            "description",
                                            "name"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/graphprotocol/indexer"
                                                ]
                                            },
                                            "repository": {
                                                "type": "string",
                                                "enum": [
                                                    "graphops"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "Graph protocol indexer components"
                                                ]
                                            },
                                            "name": {
                                                "type": "string",
                                                "enum": [
                                                    "graph-network-indexer"
                                                ]
                                            }
                                        }
                                    }
                                }
                            },
                            "graph-toolbox": {
                                "type": "object",
                                "required": [
                                    "chart"
                                ],
                                "properties": {
                                    "chart": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "repository",
                                            "description",
                                            "name"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/graphops/docker-builds/tree/main/dockerfiles/graph-toolbox"
                                                ]
                                            },
                                            "repository": {
                                                "type": "string",
                                                "enum": [
                                                    "graphops"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "Utility kit for interacting and managing the Graph indexer stack."
                                                ]
                                            },
                                            "name": {
                                                "type": "string",
                                                "enum": [
                                                    "graph-toolbox"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "labels": {
                        "type": "object",
                        "properties": {
                            "launchpad.graphops.xyz/namespace": {
                                "type": "string",
                                "enum": [
                                    "graph"
                                ]
                            }
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/base.labels"
                            },
                            {
                                "required": [
                                    "launchpad.graphops.xyz/namespace"
                                ]
                            }
                        ]
                    }
                }
            },
            "namespaces.graph.flavor": {
                "type": "object"
            },
            "namespaces.graph.flavor.enum": {
                "$ref": "#/components/schemas/namespaces.graph.flavor.goerli"
            },
            "namespaces.graph.flavor.goerli": {
                "description": "suitable defaults for a mainnet archive node",
                "type": "string",
                "enum": [
                    "goerli"
                ]
            },
            "namespaces.graph.helmfiles": {
                "description": "Graph helmfile API",
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string",
                        "pattern": "*github.com/graphops/launchpad-namespaces.git@graph/helmfile.yaml*"
                    },
                    "values": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/namespaces.graph.values"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/namespaces.graph.values"
                                }
                            }
                        ]
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/base.helmfiles"
                    },
                    {
                        "required": [
                            "path"
                        ]
                    }
                ]
            },
            "namespaces.graph.values": {
                "description": "Graph namespace values schema",
                "type": "object",
                "properties": {
                    "targetNamespace": {
                        "description": "the default is graph-<flavor>",
                        "type": "string",
                        "default": "graph-goerli"
                    },
                    "flavor": {
                        "$ref": "#/components/schemas/namespaces.graph.flavor.enum"
                    },
                    "graph-node": {
                        "$ref": "#/components/schemas/namespaces.graph.values.releaseValues"
                    },
                    "graph-network-indexer": {
                        "$ref": "#/components/schemas/namespaces.graph.values.releaseValues"
                    },
                    "graph-toolbox": {
                        "$ref": "#/components/schemas/namespaces.graph.values.releaseValues"
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/base.values"
                    }
                ]
            },
            "namespaces.graph.values.releaseValues": {
                "type": "object",
                "properties": {
                    "mergeValues": {
                        "type": "boolean",
                        "default": true
                    },
                    "values": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/map"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/map"
                                }
                            }
                        ]
                    }
                }
            },
            "namespaces.ingress": {
                "type": "object",
                "required": [
                    "meta",
                    "releases",
                    "labels"
                ],
                "properties": {
                    "meta": {
                        "type": "object",
                        "required": [
                            "name",
                            "url",
                            "description"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "enum": [
                                    "ingress"
                                ]
                            },
                            "url": {
                                "type": "string",
                                "enum": [
                                    "https://github.com/graphops/launchpad-namespaces/ingress"
                                ]
                            },
                            "description": {
                                "type": "string",
                                "enum": [
                                    "This *Namespace* adds ingress support and certificate management on kubernetes"
                                ]
                            }
                        }
                    },
                    "releases": {
                        "type": "object",
                        "required": [
                            "ingress-nginx",
                            "cert-manager",
                            "cert-manager-resources"
                        ],
                        "properties": {
                            "ingress-nginx": {
                                "type": "object",
                                "required": [
                                    "chart",
                                    "feature"
                                ],
                                "properties": {
                                    "chart": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "repository",
                                            "description",
                                            "name"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/kubernetes/ingress-nginx/tree/main/charts/ingress-nginx"
                                                ]
                                            },
                                            "repository": {
                                                "type": "string",
                                                "enum": [
                                                    "ingress-nginx"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "ingress-nginx is an Ingress controller for Kubernetes using NGINX as a reverse proxy and load balancer."
                                                ]
                                            },
                                            "name": {
                                                "type": "string",
                                                "enum": [
                                                    "ingress-nginx"
                                                ]
                                            }
                                        }
                                    },
                                    "feature": {
                                        "$ref": "#/components/schemas/namespaces.ingress.features.ingress"
                                    }
                                }
                            },
                            "cert-manager": {
                                "type": "object",
                                "required": [
                                    "chart",
                                    "feature"
                                ],
                                "properties": {
                                    "chart": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "repository",
                                            "description",
                                            "name"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/cert-manager/cert-manager"
                                                ]
                                            },
                                            "repository": {
                                                "type": "string",
                                                "enum": [
                                                    "jetstack"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "cert-manager adds certificates and certificate issuers as resource types in Kubernetes clusters, and simplifies the process of obtaining, renewing and using those certificates."
                                                ]
                                            },
                                            "name": {
                                                "type": "string",
                                                "enum": [
                                                    "cert-manager"
                                                ]
                                            }
                                        }
                                    },
                                    "feature": {
                                        "$ref": "#/components/schemas/namespaces.ingress.features.certManager"
                                    }
                                }
                            },
                            "cert-manager-resources": {
                                "type": "object",
                                "required": [
                                    "chart",
                                    "feature"
                                ],
                                "properties": {
                                    "chart": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "repository",
                                            "description",
                                            "name"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/graphops/launchpad-charts/tree/main/charts/resource-injector"
                                                ]
                                            },
                                            "repository": {
                                                "type": "string",
                                                "enum": [
                                                    "graphops"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "Manage Raw Kubernetes Resources using Helm"
                                                ]
                                            },
                                            "name": {
                                                "type": "string",
                                                "enum": [
                                                    "resource-injector"
                                                ]
                                            }
                                        }
                                    },
                                    "feature": {
                                        "$ref": "#/components/schemas/namespaces.ingress.features.certManager"
                                    }
                                }
                            }
                        }
                    },
                    "labels": {
                        "type": "object",
                        "properties": {
                            "launchpad.graphops.xyz/namespace": {
                                "type": "string",
                                "enum": [
                                    "ingress"
                                ]
                            }
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/base.labels"
                            },
                            {
                                "required": [
                                    "launchpad.graphops.xyz/namespace"
                                ]
                            }
                        ]
                    }
                }
            },
            "namespaces.ingress.features": {
                "type": "object"
            },
            "namespaces.ingress.features.certManager": {
                "description": "cert-manager: include cert-manager",
                "type": "string",
                "enum": [
                    "cert-manager"
                ]
            },
            "namespaces.ingress.features.enum": {
                "description": "ingress features enum",
                "type": "string",
                "enum": [
                    "ingress",
                    "cert-manager"
                ]
            },
            "namespaces.ingress.features.ingress": {
                "description": "ingress: for the ingress-nginx release",
                "type": "string",
                "enum": [
                    "ingress"
                ]
            },
            "namespaces.ingress.helmfiles": {
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string",
                        "pattern": "*github.com/graphops/launchpad-namespaces.git@ingress/helmfile.yaml*"
                    },
                    "values": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/namespaces.ingress.values"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/namespaces.ingress.values"
                                }
                            }
                        ]
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/base.helmfiles"
                    },
                    {
                        "required": [
                            "path"
                        ]
                    }
                ]
            },
            "namespaces.ingress.values": {
                "type": "object",
                "properties": {
                    "targetNamespace": {
                        "type": "string",
                        "default": "ingress"
                    },
                    "features": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/namespaces.ingress.features.enum"
                        },
                        "default": [
                            "ingress",
                            "cert-manager"
                        ]
                    },
                    "ingress-nginx": {
                        "$ref": "#/components/schemas/namespaces.ingress.values.releaseValues"
                    },
                    "cert-manager": {
                        "$ref": "#/components/schemas/namespaces.ingress.values.releaseValues"
                    },
                    "cert-manager-resources": {
                        "$ref": "#/components/schemas/namespaces.ingress.values.releaseValues"
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/base.values"
                    }
                ]
            },
            "namespaces.ingress.values.releaseValues": {
                "type": "object",
                "properties": {
                    "mergeValues": {
                        "type": "boolean",
                        "default": true
                    },
                    "values": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/map"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/map"
                                }
                            }
                        ]
                    }
                }
            },
            "namespaces.monitoring": {
                "type": "object",
                "required": [
                    "meta",
                    "releases",
                    "labels"
                ],
                "properties": {
                    "meta": {
                        "type": "object",
                        "required": [
                            "name",
                            "url",
                            "description"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "enum": [
                                    "monitoring"
                                ]
                            },
                            "url": {
                                "type": "string",
                                "enum": [
                                    "https://github.com/graphops/launchpad-namespaces/monitoring"
                                ]
                            },
                            "description": {
                                "type": "string",
                                "enum": [
                                    "This *Namespace* adds software for log and metrics collection and visualization, as well as alarmistic."
                                ]
                            }
                        }
                    },
                    "releases": {
                        "type": "object",
                        "required": [
                            "kube-prometheus-stack",
                            "node-problem-detector",
                            "loki",
                            "promtail"
                        ],
                        "properties": {
                            "kube-prometheus-stack": {
                                "type": "object",
                                "required": [
                                    "chart",
                                    "feature"
                                ],
                                "properties": {
                                    "chart": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "repository",
                                            "description",
                                            "name"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/prometheus-community/helm-charts/tree/main/charts/kube-prometheus-stack"
                                                ]
                                            },
                                            "repository": {
                                                "type": "string",
                                                "enum": [
                                                    "prometheus-community"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "Installs the kube-prometheus stack, a collection of Kubernetes manifests, Grafana dashboards, and Prometheus rules"
                                                ]
                                            },
                                            "name": {
                                                "type": "string",
                                                "enum": [
                                                    "kube-prometheus-stack"
                                                ]
                                            }
                                        }
                                    },
                                    "feature": {
                                        "$ref": "#/components/schemas/namespaces.monitoring.features.metrics"
                                    }
                                }
                            },
                            "node-problem-detector": {
                                "type": "object",
                                "required": [
                                    "chart",
                                    "feature"
                                ],
                                "properties": {
                                    "chart": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "repository",
                                            "description",
                                            "name"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/deliveryhero/helm-charts/tree/master/stable/node-problem-detector"
                                                ]
                                            },
                                            "repository": {
                                                "type": "string",
                                                "enum": [
                                                    "deliveryhero"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "This chart installs a node-problem-detector daemonset. This tool aims to make various node problems visible to the upstream layers in cluster management stack."
                                                ]
                                            },
                                            "name": {
                                                "type": "string",
                                                "enum": [
                                                    "node-problem-detector"
                                                ]
                                            }
                                        }
                                    },
                                    "feature": {
                                        "$ref": "#/components/schemas/namespaces.monitoring.features.metrics"
                                    }
                                }
                            },
                            "loki": {
                                "type": "object",
                                "required": [
                                    "chart",
                                    "feature"
                                ],
                                "properties": {
                                    "chart": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "repository",
                                            "description",
                                            "name"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/grafana/helm-charts/tree/main/charts/loki-distributed"
                                                ]
                                            },
                                            "repository": {
                                                "type": "string",
                                                "enum": [
                                                    "grafana"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "Helm chart for Grafana Loki in microservices mode"
                                                ]
                                            },
                                            "name": {
                                                "type": "string",
                                                "enum": [
                                                    "loki-distributed"
                                                ]
                                            }
                                        }
                                    },
                                    "feature": {
                                        "$ref": "#/components/schemas/namespaces.monitoring.features.logs"
                                    }
                                }
                            },
                            "promtail": {
                                "type": "object",
                                "required": [
                                    "chart",
                                    "feature"
                                ],
                                "properties": {
                                    "chart": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "repository",
                                            "description",
                                            "name"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/grafana/helm-charts/tree/main/charts/promtail"
                                                ]
                                            },
                                            "repository": {
                                                "type": "string",
                                                "enum": [
                                                    "grafana"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "Promtail is an agent which ships the contents of local logs to a Loki instance"
                                                ]
                                            },
                                            "name": {
                                                "type": "string",
                                                "enum": [
                                                    "promtail"
                                                ]
                                            }
                                        }
                                    },
                                    "feature": {
                                        "$ref": "#/components/schemas/namespaces.monitoring.features.logs"
                                    }
                                }
                            }
                        }
                    },
                    "labels": {
                        "type": "object",
                        "properties": {
                            "launchpad.graphops.xyz/namespace": {
                                "type": "string",
                                "enum": [
                                    "monitoring"
                                ]
                            }
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/base.labels"
                            },
                            {
                                "required": [
                                    "launchpad.graphops.xyz/namespace"
                                ]
                            }
                        ]
                    }
                }
            },
            "namespaces.monitoring.features": {
                "description": "Monitoring namespace features schema",
                "type": "object"
            },
            "namespaces.monitoring.features.enum": {
                "type": "string",
                "enum": [
                    "metrics",
                    "logs"
                ]
            },
            "namespaces.monitoring.features.logs": {
                "description": "logs: add Loki and promtail for logging",
                "type": "string",
                "enum": [
                    "logs"
                ]
            },
            "namespaces.monitoring.features.metrics": {
                "description": "metrics: add kube-prometheus stack and node-problem-detector",
                "type": "string",
                "enum": [
                    "metrics"
                ]
            },
            "namespaces.monitoring.helmfiles": {
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string",
                        "pattern": "*github.com/graphops/launchpad-namespaces.git@monitoring/helmfile.yaml*"
                    },
                    "values": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/namespaces.monitoring.values"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/namespaces.monitoring.values"
                                }
                            }
                        ]
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/base.helmfiles"
                    },
                    {
                        "required": [
                            "path"
                        ]
                    }
                ]
            },
            "namespaces.monitoring.values": {
                "description": "Monitoring namespace values interface schema",
                "type": "object",
                "properties": {
                    "targetNamespace": {
                        "type": "string",
                        "default": "monitoring"
                    },
                    "features": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/namespaces.monitoring.features.enum"
                        },
                        "default": [
                            "metrics",
                            "logs"
                        ]
                    },
                    "kube-prometheus-stack": {
                        "$ref": "#/components/schemas/namespaces.monitoring.values.releaseValues"
                    },
                    "node-problem-detector": {
                        "$ref": "#/components/schemas/namespaces.monitoring.values.releaseValues"
                    },
                    "loki": {
                        "$ref": "#/components/schemas/namespaces.monitoring.values.releaseValues"
                    },
                    "promtail": {
                        "$ref": "#/components/schemas/namespaces.monitoring.values.releaseValues"
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/base.values"
                    }
                ]
            },
            "namespaces.monitoring.values.releaseValues": {
                "type": "object",
                "properties": {
                    "mergeValues": {
                        "type": "boolean",
                        "default": true
                    },
                    "values": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/map"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/map"
                                }
                            }
                        ]
                    }
                }
            },
            "namespaces.polygon": {
                "description": "Polygon *Namespace*",
                "type": "object",
                "required": [
                    "meta",
                    "releases",
                    "labels"
                ],
                "properties": {
                    "meta": {
                        "type": "object",
                        "required": [
                            "name",
                            "url",
                            "description"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "enum": [
                                    "polygon"
                                ]
                            },
                            "url": {
                                "type": "string",
                                "enum": [
                                    "https://github.com/graphops/launchpad-namespaces/polygon"
                                ]
                            },
                            "description": {
                                "type": "string",
                                "enum": [
                                    "This *Namespace* provides a suitable stack to operate Polygon mainnet archive nodes."
                                ]
                            }
                        }
                    },
                    "releases": {
                        "type": "object",
                        "required": [
                            "erigon",
                            "heimdall",
                            "proxyd"
                        ],
                        "properties": {
                            "erigon": {
                                "type": "object",
                                "required": [
                                    "chart"
                                ],
                                "properties": {
                                    "chart": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "repository",
                                            "description",
                                            "name"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/ledgerwatch/erigon"
                                                ]
                                            },
                                            "repository": {
                                                "type": "string",
                                                "enum": [
                                                    "graphops"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "Erigon is an implementation of Ethereum (execution client with light client for consensus layer), on the efficiency frontier."
                                                ]
                                            },
                                            "name": {
                                                "type": "string",
                                                "enum": [
                                                    "erigon"
                                                ]
                                            }
                                        }
                                    }
                                }
                            },
                            "heimdall": {
                                "type": "object",
                                "required": [
                                    "chart"
                                ],
                                "properties": {
                                    "chart": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "repository",
                                            "description",
                                            "name"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/maticnetwork/heimdall"
                                                ]
                                            },
                                            "repository": {
                                                "type": "string",
                                                "enum": [
                                                    "graphops"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "Validator node for Matic Network."
                                                ]
                                            },
                                            "name": {
                                                "type": "string",
                                                "enum": [
                                                    "heimdall"
                                                ]
                                            }
                                        }
                                    }
                                }
                            },
                            "proxyd": {
                                "type": "object",
                                "required": [
                                    "chart"
                                ],
                                "properties": {
                                    "chart": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "repository",
                                            "description",
                                            "name"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/ethereum-optimism/optimism/tree/develop/proxyd"
                                                ]
                                            },
                                            "repository": {
                                                "type": "string",
                                                "enum": [
                                                    "graphops"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "Proxyd is an EVM-blockchain JSON-RPC router and load balancer developed in Go by Optimism. It is capable of load balancing, automatic failover, intelligent request routing and very basic caching."
                                                ]
                                            },
                                            "name": {
                                                "type": "string",
                                                "enum": [
                                                    "proxyd"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "labels": {
                        "type": "object",
                        "properties": {
                            "launchpad.graphops.xyz/namespace": {
                                "type": "string",
                                "enum": [
                                    "polygon"
                                ]
                            }
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/base.labels"
                            },
                            {
                                "required": [
                                    "launchpad.graphops.xyz/namespace"
                                ]
                            }
                        ]
                    }
                }
            },
            "namespaces.polygon.flavor": {
                "type": "object"
            },
            "namespaces.polygon.flavor.enum": {
                "$ref": "#/components/schemas/namespaces.polygon.flavor.mainnet"
            },
            "namespaces.polygon.flavor.mainnet": {
                "description": "suitable defaults for a mainnet archive node",
                "type": "string",
                "enum": [
                    "mainnet"
                ]
            },
            "namespaces.polygon.helmfiles": {
                "description": "polygon helmfile API",
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string",
                        "pattern": "*github.com/graphops/launchpad-namespaces.git@polygon/helmfile.yaml*"
                    },
                    "values": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/namespaces.polygon.values"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/namespaces.polygon.values"
                                }
                            }
                        ]
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/base.helmfiles"
                    },
                    {
                        "required": [
                            "path"
                        ]
                    }
                ]
            },
            "namespaces.polygon.values": {
                "description": "polygon namespace values schema",
                "type": "object",
                "properties": {
                    "targetNamespace": {
                        "description": "the default is polygon-<flavor>",
                        "type": "string",
                        "default": "polygon-mainnet"
                    },
                    "flavor": {
                        "$ref": "#/components/schemas/namespaces.polygon.flavor.enum"
                    },
                    "erigon": {
                        "$ref": "#/components/schemas/namespaces.polygon.values.releaseValues"
                    },
                    "heimdall": {
                        "$ref": "#/components/schemas/namespaces.polygon.values.releaseValues"
                    },
                    "proxyd": {
                        "$ref": "#/components/schemas/namespaces.polygon.values.releaseValues"
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/base.values"
                    }
                ]
            },
            "namespaces.polygon.values.releaseValues": {
                "type": "object",
                "properties": {
                    "mergeValues": {
                        "type": "boolean",
                        "default": true
                    },
                    "values": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/map"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/map"
                                }
                            }
                        ]
                    }
                }
            },
            "namespaces.postgresOperator": {
                "type": "object",
                "required": [
                    "meta",
                    "releases",
                    "labels"
                ],
                "properties": {
                    "meta": {
                        "type": "object",
                        "required": [
                            "name",
                            "url",
                            "description"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "enum": [
                                    "postgres-operator"
                                ]
                            },
                            "url": {
                                "type": "string",
                                "enum": [
                                    "https://github.com/graphops/launchpad-namespaces/postgres-operator"
                                ]
                            },
                            "description": {
                                "type": "string",
                                "enum": [
                                    "This *Namespace* extends your Kubernetes cluster with custom resources for easilly creating and managing Postgres databases"
                                ]
                            }
                        }
                    },
                    "releases": {
                        "type": "object",
                        "required": [
                            "postgres-operator"
                        ],
                        "properties": {
                            "postgres-operator": {
                                "type": "object",
                                "required": [
                                    "chart"
                                ],
                                "properties": {
                                    "chart": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "repository",
                                            "description",
                                            "name"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/zalando/postgres-operator"
                                                ]
                                            },
                                            "repository": {
                                                "type": "string",
                                                "enum": [
                                                    "postgres-operator-charts"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "The Postgres Operator delivers an easy to run highly-available PostgreSQL clusters on Kubernetes (K8s) powered by Patroni."
                                                ]
                                            },
                                            "name": {
                                                "type": "string",
                                                "enum": [
                                                    "postgres-operator"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "labels": {
                        "type": "object",
                        "properties": {
                            "launchpad.graphops.xyz/namespace": {
                                "type": "string",
                                "enum": [
                                    "postgres-operator"
                                ]
                            }
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/base.labels"
                            },
                            {
                                "required": [
                                    "launchpad.graphops.xyz/namespace"
                                ]
                            }
                        ]
                    }
                }
            },
            "namespaces.postgresOperator.helmfiles": {
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string",
                        "pattern": "*github.com/graphops/launchpad-namespaces.git@postgres-operator/helmfile.yaml*"
                    },
                    "values": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/namespaces.postgresOperator.values"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/namespaces.postgresOperator.values"
                                }
                            }
                        ]
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/base.helmfiles"
                    },
                    {
                        "required": [
                            "path"
                        ]
                    }
                ]
            },
            "namespaces.postgresOperator.values": {
                "description": "Postgres-Operator namespace values interface schema",
                "type": "object",
                "properties": {
                    "targetNamespace": {
                        "type": "string",
                        "default": "postgres-operator"
                    },
                    "postgres-operator": {
                        "$ref": "#/components/schemas/namespaces.postgresOperator.values.releaseValues"
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/base.values"
                    }
                ]
            },
            "namespaces.postgresOperator.values.releaseValues": {
                "type": "object",
                "properties": {
                    "mergeValues": {
                        "type": "boolean",
                        "default": true
                    },
                    "values": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/map"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/map"
                                }
                            }
                        ]
                    }
                }
            },
            "namespaces.sealedSecrets": {
                "type": "object",
                "required": [
                    "meta",
                    "releases",
                    "labels"
                ],
                "properties": {
                    "meta": {
                        "type": "object",
                        "required": [
                            "name",
                            "url",
                            "description"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "enum": [
                                    "sealed-secrets"
                                ]
                            },
                            "url": {
                                "type": "string",
                                "enum": [
                                    "https://github.com/graphops/launchpad-namespaces/sealed-secrets"
                                ]
                            },
                            "description": {
                                "type": "string",
                                "enum": [
                                    "This *Namespace* provides a Kubernetes controller and tool for one-way encrypted Secrets"
                                ]
                            }
                        }
                    },
                    "releases": {
                        "type": "object",
                        "required": [
                            "sealed-secrets"
                        ],
                        "properties": {
                            "sealed-secrets": {
                                "type": "object",
                                "required": [
                                    "chart"
                                ],
                                "properties": {
                                    "chart": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "repository",
                                            "description",
                                            "name"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/bitnami/charts/tree/main/bitnami/sealed-secrets"
                                                ]
                                            },
                                            "repository": {
                                                "type": "string",
                                                "enum": [
                                                    "sealed-secrets"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "Sealed Secrets are 'one-way' encrypted K8s Secrets that can be created by anyone, but can only be decrypted by the controller running in the target cluster recovering the original object."
                                                ]
                                            },
                                            "name": {
                                                "type": "string",
                                                "enum": [
                                                    "sealed-secrets"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "labels": {
                        "type": "object",
                        "properties": {
                            "launchpad.graphops.xyz/namespace": {
                                "type": "string",
                                "enum": [
                                    "sealed-secrets"
                                ]
                            }
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/base.labels"
                            },
                            {
                                "required": [
                                    "launchpad.graphops.xyz/namespace"
                                ]
                            }
                        ]
                    }
                }
            },
            "namespaces.sealedSecrets.helmfiles": {
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string",
                        "pattern": "*github.com/graphops/launchpad-namespaces.git@sealed-secrets/helmfile.yaml*"
                    },
                    "values": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/namespaces.sealedSecrets.values"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/namespaces.sealedSecrets.values"
                                }
                            }
                        ]
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/base.helmfiles"
                    },
                    {
                        "required": [
                            "path"
                        ]
                    }
                ]
            },
            "namespaces.sealedSecrets.values": {
                "description": "Sealed-Secrets namespace values schema",
                "type": "object",
                "properties": {
                    "targetNamespace": {
                        "type": "string",
                        "default": "sealed-secrets"
                    },
                    "sealed-secrets": {
                        "$ref": "#/components/schemas/namespaces.sealedSecrets.values.releaseValues"
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/base.values"
                    }
                ]
            },
            "namespaces.sealedSecrets.values.releaseValues": {
                "type": "object",
                "properties": {
                    "mergeValues": {
                        "type": "boolean",
                        "default": true
                    },
                    "values": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/map"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/map"
                                }
                            }
                        ]
                    }
                }
            },
            "namespaces.storage": {
                "type": "object",
                "required": [
                    "meta",
                    "labels",
                    "releases"
                ],
                "properties": {
                    "meta": {
                        "type": "object",
                        "required": [
                            "name",
                            "url",
                            "version",
                            "description"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "enum": [
                                    "storage"
                                ]
                            },
                            "url": {
                                "type": "string",
                                "enum": [
                                    "https://github.com/graphops/launchpad-namespaces/storage"
                                ]
                            },
                            "version": {
                                "type": "string",
                                "enum": [
                                    "0.9.0"
                                ]
                            },
                            "description": {
                                "type": "string",
                                "enum": [
                                    "This *Namespace* uses [OpenEBS](https://openebs.io) to provide a software defined storage layer\nsuitable for stateful workloads that require low-latency access to the storage."
                                ]
                            }
                        }
                    },
                    "labels": {
                        "type": "object",
                        "properties": {
                            "launchpad.graphops.xyz/namespace": {
                                "type": "string",
                                "enum": [
                                    "storage"
                                ]
                            },
                            "launchpad.graphops.xyz/layer": {
                                "type": "string",
                                "enum": [
                                    "base"
                                ]
                            }
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/base.labels"
                            },
                            {
                                "required": [
                                    "launchpad.graphops.xyz/namespace",
                                    "launchpad.graphops.xyz/layer"
                                ]
                            }
                        ]
                    },
                    "releases": {
                        "type": "object",
                        "required": [
                            "openebs",
                            "openebs-rawfile-localpv",
                            "openebs-rawfile-storageclass",
                            "openebs-zfs-localpv",
                            "openebs-zfs-storageclass",
                            "openebs-zfs-snapclass"
                        ],
                        "properties": {
                            "openebs": {
                                "type": "object",
                                "required": [
                                    "chart"
                                ],
                                "properties": {
                                    "chart": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "repository",
                                            "description",
                                            "name"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/openebs/openebs"
                                                ]
                                            },
                                            "repository": {
                                                "type": "string",
                                                "enum": [
                                                    "openebs"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "OpenEBS is the leading open-source example of a category of cloud native storage solutions sometimes called Container Attached Storage."
                                                ]
                                            },
                                            "name": {
                                                "type": "string",
                                                "enum": [
                                                    "openebs"
                                                ]
                                            }
                                        }
                                    }
                                }
                            },
                            "openebs-rawfile-localpv": {
                                "type": "object",
                                "required": [
                                    "chart",
                                    "feature"
                                ],
                                "properties": {
                                    "chart": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "repository",
                                            "description",
                                            "name"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/graphops/launchpad-charts/tree/main/charts/openebs-rawfile-localpv"
                                                ]
                                            },
                                            "repository": {
                                                "type": "string",
                                                "enum": [
                                                    "graphops"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "RawFile Driver Container Storage Interface"
                                                ]
                                            },
                                            "name": {
                                                "type": "string",
                                                "enum": [
                                                    "openebs-rawfile-localpv"
                                                ]
                                            }
                                        }
                                    },
                                    "feature": {
                                        "$ref": "#/components/schemas/namespaces.storage.features.rawfile"
                                    }
                                }
                            },
                            "openebs-rawfile-storageclass": {
                                "type": "object",
                                "required": [
                                    "chart",
                                    "feature"
                                ],
                                "properties": {
                                    "chart": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "repository",
                                            "description",
                                            "name"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/graphops/launchpad-charts/tree/main/charts/resource-injector"
                                                ]
                                            },
                                            "repository": {
                                                "type": "string",
                                                "enum": [
                                                    "graphops"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "Manage Raw Kubernetes Resources using Helm"
                                                ]
                                            },
                                            "name": {
                                                "type": "string",
                                                "enum": [
                                                    "resource-injector"
                                                ]
                                            }
                                        }
                                    },
                                    "feature": {
                                        "$ref": "#/components/schemas/namespaces.storage.features.rawfile"
                                    }
                                }
                            },
                            "openebs-zfs-localpv": {
                                "type": "object",
                                "required": [
                                    "chart",
                                    "feature"
                                ],
                                "properties": {
                                    "chart": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "repository",
                                            "description",
                                            "name"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/openebs/zfs-localpv/tree/b70fb1e847b8c9ba32e3fd8cba877767686f6b26"
                                                ]
                                            },
                                            "repository": {
                                                "type": "string",
                                                "enum": [
                                                    "openebs-zfs-localpv"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "CSI driver for provisioning Local PVs backed by ZFS and more."
                                                ]
                                            },
                                            "name": {
                                                "type": "string",
                                                "enum": [
                                                    "zfs-localpv"
                                                ]
                                            }
                                        }
                                    },
                                    "feature": {
                                        "$ref": "#/components/schemas/namespaces.storage.features.zfs"
                                    }
                                }
                            },
                            "openebs-zfs-storageclass": {
                                "type": "object",
                                "required": [
                                    "chart",
                                    "feature"
                                ],
                                "properties": {
                                    "chart": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "repository",
                                            "description",
                                            "name"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/graphops/launchpad-charts/tree/main/charts/resource-injector"
                                                ]
                                            },
                                            "repository": {
                                                "type": "string",
                                                "enum": [
                                                    "graphops"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "Manage Raw Kubernetes Resources using Helm"
                                                ]
                                            },
                                            "name": {
                                                "type": "string",
                                                "enum": [
                                                    "resource-injector"
                                                ]
                                            }
                                        }
                                    },
                                    "feature": {
                                        "$ref": "#/components/schemas/namespaces.storage.features.zfs"
                                    }
                                }
                            },
                            "openebs-zfs-snapclass": {
                                "type": "object",
                                "required": [
                                    "chart",
                                    "feature"
                                ],
                                "properties": {
                                    "chart": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "repository",
                                            "description",
                                            "name"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/graphops/launchpad-charts/tree/main/charts/resource-injector"
                                                ]
                                            },
                                            "repository": {
                                                "type": "string",
                                                "enum": [
                                                    "graphops"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "Manage Raw Kubernetes Resources using Helm"
                                                ]
                                            },
                                            "name": {
                                                "type": "string",
                                                "enum": [
                                                    "resource-injector"
                                                ]
                                            }
                                        }
                                    },
                                    "feature": {
                                        "$ref": "#/components/schemas/namespaces.storage.features.zfs"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "namespaces.storage.features": {
                "description": "storage namespace features schema",
                "type": "object"
            },
            "namespaces.storage.features.enum": {
                "type": "string",
                "enum": [
                    "zfs",
                    "rawfile"
                ]
            },
            "namespaces.storage.features.rawfile": {
                "description": "include the localpv-rawfile release and storageclass",
                "type": "string",
                "enum": [
                    "rawfile"
                ]
            },
            "namespaces.storage.features.zfs": {
                "description": "include the localpv-zfs release and storageclass",
                "type": "string",
                "enum": [
                    "zfs"
                ]
            },
            "namespaces.storage.helmfiles": {
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string",
                        "pattern": "*github.com/graphops/launchpad-namespaces.git@storage/helmfile.yaml*"
                    },
                    "values": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/namespaces.storage.values"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/namespaces.storage.values"
                                }
                            }
                        ]
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/base.helmfiles"
                    },
                    {
                        "required": [
                            "path"
                        ]
                    }
                ]
            },
            "namespaces.storage.values": {
                "type": "object",
                "properties": {
                    "targetNamespace": {
                        "type": "string",
                        "default": "storage"
                    },
                    "features": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/namespaces.storage.features.enum"
                        },
                        "default": [
                            "rawfile"
                        ]
                    },
                    "openebs": {
                        "$ref": "#/components/schemas/namespaces.storage.values.releaseValues"
                    },
                    "openebs-rawfile-localpv": {
                        "$ref": "#/components/schemas/namespaces.storage.values.releaseValues"
                    },
                    "openebs-rawfile-storageclass": {
                        "$ref": "#/components/schemas/namespaces.storage.values.releaseValues"
                    },
                    "openebs-zfs-localpv": {
                        "$ref": "#/components/schemas/namespaces.storage.values.releaseValues"
                    },
                    "openebs-zfs-storageclass": {
                        "$ref": "#/components/schemas/namespaces.storage.values.releaseValues"
                    },
                    "openebs-zfs-snapclass": {
                        "$ref": "#/components/schemas/namespaces.storage.values.releaseValues"
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/base.values"
                    }
                ]
            },
            "namespaces.storage.values.releaseValues": {
                "type": "object",
                "properties": {
                    "mergeValues": {
                        "type": "boolean",
                        "default": true
                    },
                    "values": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/map"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/map"
                                }
                            }
                        ]
                    }
                }
            },
            "repositories": {
                "type": "object",
                "required": [
                    "graphops",
                    "ingress-nginx",
                    "jetstack",
                    "prometheus-community",
                    "deliveryhero",
                    "grafana",
                    "postgres-operator-charts",
                    "sealed-secrets",
                    "openebs",
                    "openebs-zfs-localpv",
                    "openebs-monitoring"
                ],
                "properties": {
                    "graphops": {
                        "type": "object",
                        "required": [
                            "url",
                            "description",
                            "charts"
                        ],
                        "properties": {
                            "url": {
                                "type": "string",
                                "enum": [
                                    "https://graphops.github.io/launchpad-charts/canary"
                                ]
                            },
                            "description": {
                                "type": "string",
                                "enum": [
                                    "lorem ipsolum"
                                ]
                            },
                            "charts": {
                                "type": "object",
                                "required": [
                                    "erigon",
                                    "nimbus",
                                    "proxyd",
                                    "heimdall",
                                    "celo",
                                    "arbitrum-nitro",
                                    "arbitrum-classic",
                                    "avalanche",
                                    "nethermind",
                                    "resource-injector",
                                    "openebs-rawfile-localpv",
                                    "graph-node",
                                    "graph-network-indexer",
                                    "graph-toolbox"
                                ],
                                "properties": {
                                    "erigon": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "description"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/ledgerwatch/erigon"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "Erigon is an implementation of Ethereum (execution client with light client for consensus layer), on the efficiency frontier."
                                                ]
                                            }
                                        }
                                    },
                                    "nimbus": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "description"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/status-im/nimbus-eth2"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "Nimbus-eth2 is an extremely efficient consensus layer (eth2) client implementation."
                                                ]
                                            }
                                        }
                                    },
                                    "proxyd": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "description"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/ethereum-optimism/optimism/tree/develop/proxyd"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "Proxyd is an EVM-blockchain JSON-RPC router and load balancer developed in Go by Optimism. It is capable of load balancing, automatic failover, intelligent request routing and very basic caching."
                                                ]
                                            }
                                        }
                                    },
                                    "heimdall": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "description"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/maticnetwork/heimdall"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "Validator node for Matic Network."
                                                ]
                                            }
                                        }
                                    },
                                    "celo": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "description"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/celo-org/celo-blockchain"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "Official golang implementation of the Celo blockchain"
                                                ]
                                            }
                                        }
                                    },
                                    "arbitrum-nitro": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "description"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/OffchainLabs/nitro/"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "Nitro is the latest iteration of the Arbitrum technology. It is a fully integrated, complete layer 2 optimistic rollup system, including fraud proofs, the sequencer, the token bridges, advanced calldata compression, and more."
                                                ]
                                            }
                                        }
                                    },
                                    "arbitrum-classic": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "description"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/OffchainLabs/arbitrum-classic"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "The old \"classic\" Arbitrum tech stack."
                                                ]
                                            }
                                        }
                                    },
                                    "avalanche": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "description"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/ava-labs/avalanchego"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "Node implementation for the Avalanche network - a blockchains platform with high throughput, and blazing fast transactions."
                                                ]
                                            }
                                        }
                                    },
                                    "nethermind": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "description"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/NethermindEth/nethermind"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "Nethermind is a high-performance, highly configurable full Ethereum protocol execution client built on .NET that runs on Linux, Windows, and macOS, and supports Clique, Aura, and Ethash."
                                                ]
                                            }
                                        }
                                    },
                                    "resource-injector": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "description"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/graphops/launchpad-charts/tree/main/charts/resource-injector"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "Manage Raw Kubernetes Resources using Helm"
                                                ]
                                            }
                                        }
                                    },
                                    "openebs-rawfile-localpv": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "description"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/graphops/launchpad-charts/tree/main/charts/openebs-rawfile-localpv"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "RawFile Driver Container Storage Interface"
                                                ]
                                            }
                                        }
                                    },
                                    "graph-node": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "description"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/graphprotocol/graph-node"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "Graph Node is an open source Rust implementation that event sources the Ethereum blockchain to deterministically update a data store that can be queried via the GraphQL endpoint."
                                                ]
                                            }
                                        }
                                    },
                                    "graph-network-indexer": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "description"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/graphprotocol/indexer"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "Graph protocol indexer components"
                                                ]
                                            }
                                        }
                                    },
                                    "graph-toolbox": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "description"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/graphops/docker-builds/tree/main/dockerfiles/graph-toolbox"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "Utility kit for interacting and managing the Graph indexer stack."
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "ingress-nginx": {
                        "type": "object",
                        "required": [
                            "url",
                            "description",
                            "charts"
                        ],
                        "properties": {
                            "url": {
                                "type": "string",
                                "enum": [
                                    "https://kubernetes.github.io/ingress-nginx"
                                ]
                            },
                            "description": {
                                "type": "string",
                                "enum": [
                                    "ingress-nginx is an Ingress controller for Kubernetes"
                                ]
                            },
                            "charts": {
                                "type": "object",
                                "required": [
                                    "ingress-nginx"
                                ],
                                "properties": {
                                    "ingress-nginx": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "description"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/kubernetes/ingress-nginx/tree/main/charts/ingress-nginx"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "ingress-nginx is an Ingress controller for Kubernetes using NGINX as a reverse proxy and load balancer."
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "jetstack": {
                        "type": "object",
                        "required": [
                            "url",
                            "description",
                            "charts"
                        ],
                        "properties": {
                            "url": {
                                "type": "string",
                                "enum": [
                                    "https://charts.jetstack.io"
                                ]
                            },
                            "description": {
                                "type": "string",
                                "enum": [
                                    ""
                                ]
                            },
                            "charts": {
                                "type": "object",
                                "required": [
                                    "cert-manager"
                                ],
                                "properties": {
                                    "cert-manager": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "description"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/cert-manager/cert-manager"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "cert-manager adds certificates and certificate issuers as resource types in Kubernetes clusters, and simplifies the process of obtaining, renewing and using those certificates."
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "prometheus-community": {
                        "type": "object",
                        "required": [
                            "url",
                            "description",
                            "charts"
                        ],
                        "properties": {
                            "url": {
                                "type": "string",
                                "enum": [
                                    "https://prometheus-community.github.io/helm-charts"
                                ]
                            },
                            "description": {
                                "type": "string",
                                "enum": [
                                    "Prometheus Community Kubernetes Helm Charts"
                                ]
                            },
                            "charts": {
                                "type": "object",
                                "required": [
                                    "kube-prometheus-stack"
                                ],
                                "properties": {
                                    "kube-prometheus-stack": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "description"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/prometheus-community/helm-charts/tree/main/charts/kube-prometheus-stack"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "Installs the kube-prometheus stack, a collection of Kubernetes manifests, Grafana dashboards, and Prometheus rules"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "deliveryhero": {
                        "type": "object",
                        "required": [
                            "url",
                            "description",
                            "charts"
                        ],
                        "properties": {
                            "url": {
                                "type": "string",
                                "enum": [
                                    "https://charts.deliveryhero.io"
                                ]
                            },
                            "description": {
                                "type": "string",
                                "enum": [
                                    "Delivery Hero are big fans of Kubernetes and use Helm extensively. Here we have collected a few charts that are used across our organisation."
                                ]
                            },
                            "charts": {
                                "type": "object",
                                "required": [
                                    "node-problem-detector"
                                ],
                                "properties": {
                                    "node-problem-detector": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "description"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/deliveryhero/helm-charts/tree/master/stable/node-problem-detector"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "This chart installs a node-problem-detector daemonset. This tool aims to make various node problems visible to the upstream layers in cluster management stack."
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "grafana": {
                        "type": "object",
                        "required": [
                            "url",
                            "description",
                            "charts"
                        ],
                        "properties": {
                            "url": {
                                "type": "string",
                                "enum": [
                                    "https://grafana.github.io/helm-charts"
                                ]
                            },
                            "description": {
                                "type": "string",
                                "enum": [
                                    ""
                                ]
                            },
                            "charts": {
                                "type": "object",
                                "required": [
                                    "promtail",
                                    "loki-distributed"
                                ],
                                "properties": {
                                    "promtail": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "description"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/grafana/helm-charts/tree/main/charts/promtail"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "Promtail is an agent which ships the contents of local logs to a Loki instance"
                                                ]
                                            }
                                        }
                                    },
                                    "loki-distributed": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "description"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/grafana/helm-charts/tree/main/charts/loki-distributed"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "Helm chart for Grafana Loki in microservices mode"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "postgres-operator-charts": {
                        "type": "object",
                        "required": [
                            "url",
                            "description",
                            "charts"
                        ],
                        "properties": {
                            "url": {
                                "type": "string",
                                "enum": [
                                    "https://opensource.zalando.com/postgres-operator/charts/postgres-operator"
                                ]
                            },
                            "description": {
                                "type": "string",
                                "enum": [
                                    ""
                                ]
                            },
                            "charts": {
                                "type": "object",
                                "required": [
                                    "postgres-operator"
                                ],
                                "properties": {
                                    "postgres-operator": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "description"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/zalando/postgres-operator"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "The Postgres Operator delivers an easy to run highly-available PostgreSQL clusters on Kubernetes (K8s) powered by Patroni."
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "sealed-secrets": {
                        "type": "object",
                        "required": [
                            "url",
                            "description",
                            "charts"
                        ],
                        "properties": {
                            "url": {
                                "type": "string",
                                "enum": [
                                    "https://bitnami-labs.github.io/sealed-secrets"
                                ]
                            },
                            "description": {
                                "type": "string",
                                "enum": [
                                    "sealed secrets chart provided by Bitnami"
                                ]
                            },
                            "charts": {
                                "type": "object",
                                "required": [
                                    "sealed-secrets"
                                ],
                                "properties": {
                                    "sealed-secrets": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "description"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/bitnami/charts/tree/main/bitnami/sealed-secrets"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "Sealed Secrets are 'one-way' encrypted K8s Secrets that can be created by anyone, but can only be decrypted by the controller running in the target cluster recovering the original object."
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "openebs": {
                        "type": "object",
                        "required": [
                            "url",
                            "description",
                            "charts"
                        ],
                        "properties": {
                            "url": {
                                "type": "string",
                                "enum": [
                                    "https://openebs.github.io/charts"
                                ]
                            },
                            "description": {
                                "type": "string",
                                "enum": [
                                    "OpenEBS Helm Repository:\nOpenEBS helps Developers and Platform SREs easily deploy Kubernetes Stateful Workloads that require fast and highly reliable container attached storage."
                                ]
                            },
                            "charts": {
                                "type": "object",
                                "required": [
                                    "openebs"
                                ],
                                "properties": {
                                    "openebs": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "description"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/openebs/openebs"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "OpenEBS is the leading open-source example of a category of cloud native storage solutions sometimes called Container Attached Storage."
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "openebs-zfs-localpv": {
                        "type": "object",
                        "required": [
                            "url",
                            "description",
                            "charts"
                        ],
                        "properties": {
                            "url": {
                                "type": "string",
                                "enum": [
                                    "https://openebs.github.io/zfs-localpv"
                                ]
                            },
                            "description": {
                                "type": "string",
                                "enum": [
                                    "A Helm chart for openebs zfs localpv provisioner. This chart bootstraps OpenEBS ZFS LocalPV provisioner deployment on a Kubernetes cluster using the Helm package manager."
                                ]
                            },
                            "charts": {
                                "type": "object",
                                "required": [
                                    "zfs-localpv"
                                ],
                                "properties": {
                                    "zfs-localpv": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "description"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/openebs/zfs-localpv/tree/b70fb1e847b8c9ba32e3fd8cba877767686f6b26"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "CSI driver for provisioning Local PVs backed by ZFS and more."
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "openebs-monitoring": {
                        "type": "object",
                        "required": [
                            "url",
                            "description",
                            "charts"
                        ],
                        "properties": {
                            "url": {
                                "type": "string",
                                "enum": [
                                    "https://openebs.github.io/monitoring/"
                                ]
                            },
                            "description": {
                                "type": "string",
                                "enum": [
                                    "A Helm chart for OpenEBS monitoring. This chart bootstraps OpenEBS monitoring stack on a Kubernetes cluster using the Helm package manager."
                                ]
                            },
                            "charts": {
                                "type": "object",
                                "required": [
                                    "openebs-monitoring"
                                ],
                                "properties": {
                                    "openebs-monitoring": {
                                        "type": "object",
                                        "required": [
                                            "url",
                                            "description"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "enum": [
                                                    "https://github.com/openebs/monitoring"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "enum": [
                                                    "A set of Grafana dashboards and Prometheus alerts for OpenEBS that can be installed as a helm chart or imported as jsonnet mixin."
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
