nimbus:
  {{ $scalingIndex := splitList "-" .Release.Name | last }}
  executionClientUrl: http://erigon-{{ $scalingIndex }}-stateful-node:8551
  jwt:
    # Generate me with: openssl rand -hex 32
    # Must match EL client jwt
    fromLiteral: "XXX_CHANGEME_XXX"
    # Instead specifying the JWT in plain text using fromLiteral, you can also reference an existing Kubernetes Secret
    # existingSecret:
    #   name: eth-goerli-jwt
    #   key: jwt

  # -- [PersistentVolumeClaimSpec](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#persistentvolumeclaimspec-v1-core) for storage
  volumeClaimSpec:
    storageClassName: openebs-rawfile-localpv # change me if desired
    resources:
      requests:
        storage: 300Gi

  affinityPresets:
    antiAffinityByHostname: false
  affinity:
    podAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 90 # try to schedule on same node as execution node if possible
        podAffinityTerm:
          topologyKey: "kubernetes.io/hostname"
          labelSelector:
            matchExpressions:
            - key: app.launchpad.graphops.xyz/component # release name
              operator: In
              values:
              - erigon
            - key: app.launchpad.graphops.xyz/scalingIndex
              operator: In
              values:
              - "{{ $scalingIndex }}"
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 25 # try to avoid scheduling with execution nodes for other chains
        podAffinityTerm:
          topologyKey: "kubernetes.io/hostname"
          namespaceSelector: {}
          labelSelector:
            matchExpressions:
            - key: app.launchpad.graphops.xyz/type
              operator: In
              values:
              - blockchain
            - key: app.launchpad.graphops.xyz/chain
              operator: NoIn
              values:
              - ethereum
            - key: app.launchpad.graphops.xyz/layer
              operator: In
              values:
              - execution
      - weight: 25 # try to avoid scheduling with execution nodes for other networks
        podAffinityTerm:
          topologyKey: "kubernetes.io/hostname"
          namespaceSelector: {}
          labelSelector:
            matchExpressions:
            - key: app.launchpad.graphops.xyz/type
              operator: In
              values:
              - blockchain
            - key: app.launchpad.graphops.xyz/chain
              operator: In
              values:
              - ethereum
            - key: app.launchpad.graphops.xyz/network
              operator: NotIn
              values:
              - "{{ .Values.flavor }}"
            - key: app.launchpad.graphops.xyz/layer
              operator: In
              values:
              - execution
      - weight: 10 # try to avoid scheduling with other consensus nodes for other chains
        podAffinityTerm:
          topologyKey: "kubernetes.io/hostname"
          namespaceSelector: {}
          labelSelector:
            matchExpressions:
            - key: app.launchpad.graphops.xyz/type
              operator: In
              values:
              - blockchain
            - key: app.launchpad.graphops.xyz/layer
              operator: In
              values:
              - consensus
            - key: app.launchpad.graphops.xyz/chain
              operator: NoIn
              values:
              - ethereum
      - weight: 10 # try to avoid scheduling with other consensus nodes for other networks
        podAffinityTerm:
          topologyKey: "kubernetes.io/hostname"
          namespaceSelector: {}
          labelSelector:
            matchExpressions:
            - key: app.launchpad.graphops.xyz/type
              operator: In
              values:
              - blockchain
            - key: app.launchpad.graphops.xyz/layer
              operator: In
              values:
              - consensus
            - key: app.launchpad.graphops.xyz/chain
              operator: In
              values:
              - ethereum
            - key: app.launchpad.graphops.xyz/network
              operator: NotIn
              values:
              - "{{ .Values.flavor }}"

{{- if (hasKey .Values.scaling "p2pStartPort") }}
  p2pNodePort:
    enabled: true
    port: {{ add (mul (sub $scalingIndex 1) 2) .Values.scaling.p2pStartPort 1 }}
{{- end }}

prometheus:
  serviceMonitors:
    enabled: true

grafana:
  dashboards: true
