{{ $scalingIndex := splitList "-" .Release.Name | last }}

statefulNode:
  # -- [PersistentVolumeClaimSpec](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#persistentvolumeclaimspec-v1-core) for Erigon storage
  volumeClaimSpec:
    # -- The storage class to use when provisioning a persistent volume for Erigon
    storageClassName: openebs-rawfile-localpv # change me if desired
    resources:
      requests:
        storage: 1Ti

  affinityPresets:
    antiAffinityByHostname: false
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - topologyKey: "kubernetes.io/hostname" # never run 2x execution nodes of the same namespace on same machine
        namespaceSelector: {}
        labelSelector:
          matchExpressions:
          - key: app.launchpad.graphops.xyz/type
            operator: In
            values:
            - blockchain
          - key: app.launchpad.graphops.xyz/chain
            operator: In
            values:
            - gnosis
          - key: app.launchpad.graphops.xyz/network
            operator: In
            values:
            - "{{ .Values.flavor }}"
          - key: app.launchpad.graphops.xyz/layer
            operator: In
            values:
            - execution
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 60 # try to avoid scheduling with other deployments execution layer nodes of dif network
          podAffinityTerm:
            topologyKey: "kubernetes.io/hostname"
            namespaceSelector: {}
            labelSelector:
              matchExpressions:
              - key: app.launchpad.graphops.xyz/type
                operator: In
                values:
                - blockchain
              - key: app.launchpad.graphops.xyz/chain
                operator: In
                values:
                - gnosis
              - key: app.launchpad.graphops.xyz/network
                operator: NotIn
                values:
                - "{{ .Values.flavor }}"
              - key: app.launchpad.graphops.xyz/layer
                operator: In
                values:
                - execution
        - weight: 60 # try to avoid scheduling with other deployments execution layer nodes of dif chain
          podAffinityTerm:
            topologyKey: "kubernetes.io/hostname"
            namespaceSelector: {}
            labelSelector:
              matchExpressions:
              - key: app.launchpad.graphops.xyz/type
                operator: In
                values:
                - blockchain
              - key: app.launchpad.graphops.xyz/chain
                operator: NotIn
                values:
                - gnosis
              - key: app.launchpad.graphops.xyz/layer
                operator: In
                values:
                - execution
        - weight: 30 # try to avoid scheduling with other deployments consesus layer nodes of dif network
          podAffinityTerm:
            topologyKey: "kubernetes.io/hostname"
            namespaceSelector: {}
            labelSelector:
              matchExpressions:
              - key: app.launchpad.graphops.xyz/type
                operator: In
                values:
                - blockchain
              - key: app.launchpad.graphops.xyz/chain
                operator: NotIn
                values:
                - gnosis
              - key: app.launchpad.graphops.xyz/layer
                operator: In
                values:
                - consensus
        - weight: 30 # try to avoid scheduling with other deployments consesus layer nodes of dif chain
          podAffinityTerm:
            topologyKey: "kubernetes.io/hostname"
            namespaceSelector: {}
            labelSelector:
              matchExpressions:
              - key: app.launchpad.graphops.xyz/type
                operator: In
                values:
                - blockchain
              - key: app.launchpad.graphops.xyz/chain
                operator: In
                values:
                - gnosis
              - key: app.launchpad.graphops.xyz/network
                operator: NotIn
                values:
                - "{{ .Values.flavor }}"
              - key: app.launchpad.graphops.xyz/layer
                operator: In
                values:
                - consensus

{{- if (hasKey .Values.scaling "p2pStartPort") }}
  p2p:
    allowedPorts:
      - {{ add (mul (sub $scalingIndex 1) 2) .Values.scaling.p2pStartPort }}
      - {{ add (mul (sub $scalingIndex 1) 2) .Values.scaling.p2pStartPort 1 }}
    service:
      enabled: true
      nodePort:
        base: {{ add (mul (sub $scalingIndex 1) 2) .Values.scaling.p2pStartPort }}
{{- end }}

prometheus:
  serviceMonitors:
    enabled: true

grafana:
  dashboards: true
